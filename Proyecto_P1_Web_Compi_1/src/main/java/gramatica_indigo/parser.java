
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615
//----------------------------------------------------

package gramatica_indigo;

import java_cup.runtime.*;
import gramatica_indigo.sym;
import gramatica_indigo.LexerIndigo;
import java_cup.runtime.XMLElement;
import clasesDAO.BloqueParametros;
import funciones.FuncionesSolicitudes;
import clasesDAO.Token;
import clasesDAO.TokenError;
import clasesDAO.TokenParametro;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\332\000\002\002\004\000\002\002\013\000\002\002" +
    "\003\000\002\003\004\000\002\003\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\005\011\000\002\006\005\000\002\006\003" +
    "\000\002\007\003\000\002\007\003\000\002\007\003\000" +
    "\002\007\003\000\002\010\011\000\002\011\005\000\002" +
    "\011\003\000\002\012\003\000\002\012\003\000\002\012" +
    "\003\000\002\012\003\000\002\012\003\000\002\013\011" +
    "\000\002\014\003\000\002\015\011\000\002\016\005\000" +
    "\002\016\005\000\002\017\011\000\002\020\005\000\002" +
    "\020\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\021\003\000\002\022\011\000\002\023\003\000" +
    "\002\024\011\000\002\025\005\000\002\025\003\000\002" +
    "\026\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\027\011\000\002\030\005" +
    "\000\002\030\003\000\002\031\003\000\002\031\003\000" +
    "\002\031\003\000\002\031\003\000\002\031\003\000\002" +
    "\031\003\000\002\031\003\000\002\031\003\000\002\031" +
    "\003\000\002\031\003\000\002\031\003\000\002\031\003" +
    "\000\002\031\003\000\002\034\011\000\002\035\005\000" +
    "\002\035\003\000\002\036\003\000\002\036\003\000\002" +
    "\036\003\000\002\036\003\000\002\036\003\000\002\036" +
    "\003\000\002\036\003\000\002\036\003\000\002\036\003" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\032\011\000\002\033\005\000\002" +
    "\033\005\000\002\037\005\000\002\040\005\000\002\041" +
    "\005\000\002\042\005\000\002\043\005\000\002\044\005" +
    "\000\002\045\005\000\002\046\005\000\002\047\005\000" +
    "\002\050\005\000\002\051\005\000\002\052\005\000\002" +
    "\053\005\000\002\054\005\000\002\055\005\000\002\056" +
    "\005\000\002\057\005\000\002\060\005\000\002\061\005" +
    "\000\002\062\005\000\002\063\005\000\002\064\005\000" +
    "\002\065\004\000\002\102\003\000\002\103\003\000\002" +
    "\104\003\000\002\076\003\000\002\076\003\000\002\076" +
    "\003\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\072\003\000\002\072\003\000\002\072\003\000" +
    "\002\072\003\000\002\072\003\000\002\073\003\000\002" +
    "\073\003\000\002\073\003\000\002\073\003\000\002\074" +
    "\003\000\002\074\003\000\002\100\003\000\002\100\003" +
    "\000\002\100\003\000\002\100\003\000\002\100\003\000" +
    "\002\100\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\003\000\002\077\003\000\002\077\003\000\002\077" +
    "\003\000\002\075\003\000\002\075\003\000\002\075\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\101\003\000\002\101\003\000\002\101\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\066\006\000\002\066\006\000\002\066" +
    "\006\000\002\066\005\000\002\067\004\000\002\067\003" +
    "\000\002\070\005\000\002\070\003\000\002\071\011\000" +
    "\002\071\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0160\000\006\003\017\010\004\001\002\000\006\003" +
    "\u0151\012\u0150\001\002\000\010\002\ufffc\003\ufffc\010\ufffc" +
    "\001\002\000\010\002\ufff8\003\ufff8\010\ufff8\001\002\000" +
    "\026\025\033\026\024\027\025\030\035\040\027\041\030" +
    "\042\031\055\034\056\032\057\026\001\002\000\010\002" +
    "\ufffb\003\ufffb\010\ufffb\001\002\000\010\002\ufff4\003\ufff4" +
    "\010\ufff4\001\002\000\010\002\ufff9\003\ufff9\010\ufff9\001" +
    "\002\000\010\002\ufff3\003\ufff3\010\ufff3\001\002\000\010" +
    "\002\ufff5\003\ufff5\010\ufff5\001\002\000\010\002\ufff6\003" +
    "\ufff6\010\ufff6\001\002\000\010\002\ufff7\003\ufff7\010\ufff7" +
    "\001\002\000\010\002\ufff2\003\ufff2\010\ufff2\001\002\000" +
    "\010\002\ufffa\003\ufffa\010\ufffa\001\002\000\004\002\uffff" +
    "\001\002\000\004\002\023\001\002\000\004\002\001\001" +
    "\002\000\006\003\036\011\040\001\002\000\006\003\036" +
    "\011\040\001\002\000\006\003\036\011\040\001\002\000" +
    "\006\003\036\011\040\001\002\000\006\003\036\011\040" +
    "\001\002\000\006\003\036\011\040\001\002\000\006\003" +
    "\036\011\040\001\002\000\006\003\036\011\040\001\002" +
    "\000\006\003\036\011\040\001\002\000\006\003\036\011" +
    "\040\001\002\000\010\031\uff2c\043\uff2c\060\uff2c\001\002" +
    "\000\004\031\042\001\002\000\004\004\041\001\002\000" +
    "\010\031\uff2d\043\uff2d\060\uff2d\001\002\000\006\003\043" +
    "\013\045\001\002\000\062\003\uff2a\032\uff2a\033\uff2a\034" +
    "\uff2a\035\uff2a\036\uff2a\037\uff2a\044\uff2a\045\uff2a\046\uff2a" +
    "\047\uff2a\050\uff2a\051\uff2a\061\uff2a\062\uff2a\063\uff2a\064" +
    "\uff2a\065\uff2a\066\uff2a\067\uff2a\070\uff2a\071\uff2a\072\uff2a" +
    "\073\uff2a\001\002\000\006\032\052\033\054\001\002\000" +
    "\004\006\046\001\002\000\004\004\047\001\002\000\062" +
    "\003\uff2b\032\uff2b\033\uff2b\034\uff2b\035\uff2b\036\uff2b\037" +
    "\uff2b\044\uff2b\045\uff2b\046\uff2b\047\uff2b\050\uff2b\051\uff2b" +
    "\061\uff2b\062\uff2b\063\uff2b\064\uff2b\065\uff2b\066\uff2b\067" +
    "\uff2b\070\uff2b\071\uff2b\072\uff2b\073\uff2b\001\002\000\006" +
    "\003\167\005\170\001\002\000\004\014\164\001\002\000" +
    "\004\013\154\001\002\000\004\014\152\001\002\000\004" +
    "\013\055\001\002\000\166\025\101\026\071\027\106\030" +
    "\146\031\074\032\072\033\112\034\132\035\077\036\117" +
    "\037\107\040\056\041\135\042\127\043\130\044\100\045" +
    "\075\046\062\047\115\050\114\051\113\052\140\053\137" +
    "\054\065\055\136\056\125\057\131\060\124\061\126\062" +
    "\076\063\104\064\067\065\150\066\060\067\116\070\151" +
    "\071\144\072\142\073\110\074\147\075\145\076\064\077" +
    "\121\100\102\101\122\102\134\103\057\104\073\105\066" +
    "\106\123\107\143\110\063\111\120\114\070\115\141\116" +
    "\061\117\111\120\105\001\002\000\010\003\uff5b\005\uff5b" +
    "\014\uff5b\001\002\000\010\003\uff38\005\uff38\014\uff38\001" +
    "\002\000\010\003\uff45\005\uff45\014\uff45\001\002\000\010" +
    "\003\uff73\005\uff73\014\uff73\001\002\000\010\003\uff55\005" +
    "\uff55\014\uff55\001\002\000\010\003\uff33\005\uff33\014\uff33" +
    "\001\002\000\010\003\uff3d\005\uff3d\014\uff3d\001\002\000" +
    "\010\003\uff4f\005\uff4f\014\uff4f\001\002\000\010\003\uff36" +
    "\005\uff36\014\uff36\001\002\000\010\003\uff47\005\uff47\014" +
    "\uff47\001\002\000\010\003\uff71\005\uff71\014\uff71\001\002" +
    "\000\010\003\uff65\005\uff65\014\uff65\001\002\000\010\003" +
    "\uff61\005\uff61\014\uff61\001\002\000\010\003\uff37\005\uff37" +
    "\014\uff37\001\002\000\010\003\uff62\005\uff62\014\uff62\001" +
    "\002\000\010\003\uff56\005\uff56\014\uff56\001\002\000\010" +
    "\003\uff49\005\uff49\014\uff49\001\002\000\010\003\uff5e\005" +
    "\uff5e\014\uff5e\001\002\000\010\003\uff57\005\uff57\014\uff57" +
    "\001\002\000\010\003\uff66\005\uff66\014\uff66\001\002\000" +
    "\010\003\uff3b\005\uff3b\014\uff3b\001\002\000\010\003\uff70" +
    "\005\uff70\014\uff70\001\002\000\010\003\uff48\005\uff48\014" +
    "\uff48\001\002\000\010\003\uff74\005\uff74\014\uff74\001\002" +
    "\000\010\003\uff64\005\uff64\014\uff64\001\002\000\010\003" +
    "\uff5c\005\uff5c\014\uff5c\001\002\000\010\003\uff40\005\uff40" +
    "\014\uff40\001\002\000\010\003\uff72\005\uff72\014\uff72\001" +
    "\002\000\010\003\uff60\005\uff60\014\uff60\001\002\000\010" +
    "\003\uff52\005\uff52\014\uff52\001\002\000\010\003\uff53\005" +
    "\uff53\014\uff53\001\002\000\010\003\uff54\005\uff54\014\uff54" +
    "\001\002\000\010\003\uff44\005\uff44\014\uff44\001\002\000" +
    "\010\003\uff5d\005\uff5d\014\uff5d\001\002\000\010\003\uff32" +
    "\005\uff32\014\uff32\001\002\000\010\003\uff3c\005\uff3c\014" +
    "\uff3c\001\002\000\010\003\uff3a\005\uff3a\014\uff3a\001\002" +
    "\000\010\003\uff35\005\uff35\014\uff35\001\002\000\010\003" +
    "\uff4b\005\uff4b\014\uff4b\001\002\000\010\003\uff4d\005\uff4d" +
    "\014\uff4d\001\002\000\010\003\uff4a\005\uff4a\014\uff4a\001" +
    "\002\000\010\003\uff59\005\uff59\014\uff59\001\002\000\010" +
    "\003\uff58\005\uff58\014\uff58\001\002\000\010\003\uff4c\005" +
    "\uff4c\014\uff4c\001\002\000\010\003\uff5f\005\uff5f\014\uff5f" +
    "\001\002\000\010\003\uffa5\005\uffa5\014\uffa5\001\002\000" +
    "\010\003\uff39\005\uff39\014\uff39\001\002\000\010\003\uff5a" +
    "\005\uff5a\014\uff5a\001\002\000\010\003\uff4e\005\uff4e\014" +
    "\uff4e\001\002\000\010\003\uff50\005\uff50\014\uff50\001\002" +
    "\000\010\003\uff51\005\uff51\014\uff51\001\002\000\010\003" +
    "\uff75\005\uff75\014\uff75\001\002\000\010\003\uff41\005\uff41" +
    "\014\uff41\001\002\000\010\003\uff34\005\uff34\014\uff34\001" +
    "\002\000\010\003\uff42\005\uff42\014\uff42\001\002\000\010" +
    "\003\uff3e\005\uff3e\014\uff3e\001\002\000\010\003\uff63\005" +
    "\uff63\014\uff63\001\002\000\010\003\uff3f\005\uff3f\014\uff3f" +
    "\001\002\000\010\003\uff46\005\uff46\014\uff46\001\002\000" +
    "\010\003\uff43\005\uff43\014\uff43\001\002\000\004\033\054" +
    "\001\002\000\006\003\uffdf\005\uffdf\001\002\000\166\025" +
    "\101\026\071\027\106\030\146\031\074\032\072\033\112" +
    "\034\132\035\077\036\117\037\107\040\056\041\135\042" +
    "\127\043\130\044\100\045\075\046\062\047\115\050\114" +
    "\051\113\052\140\053\137\054\065\055\136\056\125\057" +
    "\131\060\124\061\126\062\076\063\104\064\067\065\150" +
    "\066\060\067\116\070\151\071\144\072\142\073\110\074" +
    "\147\075\145\076\064\077\121\100\102\101\122\102\134" +
    "\103\057\104\073\105\066\106\123\107\143\110\063\111" +
    "\120\114\157\115\163\116\155\117\162\120\161\001\002" +
    "\000\010\003\uff79\005\uff79\014\uff79\001\002\000\010\003" +
    "\uffa6\005\uffa6\014\uffa6\001\002\000\010\003\uff77\005\uff77" +
    "\014\uff77\001\002\000\010\003\uff76\005\uff76\014\uff76\001" +
    "\002\000\010\003\uff7a\005\uff7a\014\uff7a\001\002\000\010" +
    "\003\uff78\005\uff78\014\uff78\001\002\000\010\003\uff7b\005" +
    "\uff7b\014\uff7b\001\002\000\004\032\052\001\002\000\006" +
    "\003\uffde\005\uffde\001\002\000\010\002\uffe0\003\uffe0\010" +
    "\uffe0\001\002\000\010\002\uff28\003\uff28\010\uff28\001\002" +
    "\000\004\007\171\001\002\000\004\005\172\001\002\000" +
    "\004\010\173\001\002\000\004\017\174\001\002\000\004" +
    "\012\175\001\002\000\004\011\176\001\002\000\010\002" +
    "\uff29\003\uff29\010\uff29\001\002\000\004\060\200\001\002" +
    "\000\006\003\043\013\045\001\002\000\034\003\224\044" +
    "\215\061\233\062\203\063\216\064\226\065\205\066\223" +
    "\067\206\070\234\071\221\072\231\073\211\001\002\000" +
    "\010\003\167\005\170\014\315\001\002\000\004\013\313" +
    "\001\002\000\010\003\uffc1\005\uffc1\014\uffc1\001\002\000" +
    "\004\013\306\001\002\000\004\013\302\001\002\000\010" +
    "\003\uffc4\005\uffc4\014\uffc4\001\002\000\010\003\uffbc\005" +
    "\uffbc\014\uffbc\001\002\000\004\013\301\001\002\000\010" +
    "\003\uffbe\005\uffbe\014\uffbe\001\002\000\010\003\uffc5\005" +
    "\uffc5\014\uffc5\001\002\000\010\003\uffc3\005\uffc3\014\uffc3" +
    "\001\002\000\004\013\276\001\002\000\004\013\264\001" +
    "\002\000\010\003\uffc6\005\uffc6\014\uffc6\001\002\000\010" +
    "\003\uffbd\005\uffbd\014\uffbd\001\002\000\004\013\262\001" +
    "\002\000\010\003\uffc0\005\uffc0\014\uffc0\001\002\000\004" +
    "\013\254\001\002\000\010\003\uffba\005\uffba\014\uffba\001" +
    "\002\000\010\003\uffbf\005\uffbf\014\uffbf\001\002\000\004" +
    "\013\252\001\002\000\010\003\uffc7\005\uffc7\014\uffc7\001" +
    "\002\000\010\003\uffc2\005\uffc2\014\uffc2\001\002\000\004" +
    "\013\247\001\002\000\010\003\uffbb\005\uffbb\014\uffbb\001" +
    "\002\000\004\013\245\001\002\000\004\013\235\001\002" +
    "\000\166\025\101\026\071\027\106\030\146\031\074\032" +
    "\072\033\112\034\132\035\077\036\117\037\107\040\056" +
    "\041\135\042\127\043\130\044\100\045\075\046\062\047" +
    "\115\050\114\051\113\052\140\053\137\054\065\055\136" +
    "\056\125\057\131\060\124\061\126\062\076\063\104\064" +
    "\067\065\150\066\060\067\116\070\151\071\144\072\142" +
    "\073\110\074\147\075\145\076\064\077\121\100\102\101" +
    "\122\102\134\103\057\104\073\105\066\106\123\107\143" +
    "\110\063\111\120\113\243\114\240\116\236\117\244\120" +
    "\242\001\002\000\010\003\uff6c\005\uff6c\014\uff6c\001\002" +
    "\000\010\003\uff93\005\uff93\014\uff93\001\002\000\010\003" +
    "\uff6e\005\uff6e\014\uff6e\001\002\000\010\003\uff6a\005\uff6a" +
    "\014\uff6a\001\002\000\010\003\uff6d\005\uff6d\014\uff6d\001" +
    "\002\000\010\003\uff6f\005\uff6f\014\uff6f\001\002\000\010" +
    "\003\uff6b\005\uff6b\014\uff6b\001\002\000\166\025\101\026" +
    "\071\027\106\030\146\031\074\032\072\033\112\034\132" +
    "\035\077\036\117\037\107\040\056\041\135\042\127\043" +
    "\130\044\100\045\075\046\062\047\115\050\114\051\113" +
    "\052\140\053\137\054\065\055\136\056\125\057\131\060" +
    "\124\061\126\062\076\063\104\064\067\065\150\066\060" +
    "\067\116\070\151\071\144\072\142\073\110\074\147\075" +
    "\145\076\064\077\121\100\102\101\122\102\134\103\057" +
    "\104\073\105\066\106\123\107\143\110\063\111\120\114" +
    "\070\115\141\116\061\117\111\120\105\001\002\000\010" +
    "\003\uff99\005\uff99\014\uff99\001\002\000\004\120\251\001" +
    "\002\000\010\003\uff91\005\uff91\014\uff91\001\002\000\010" +
    "\003\uff8d\005\uff8d\014\uff8d\001\002\000\004\120\251\001" +
    "\002\000\010\003\uff97\005\uff97\014\uff97\001\002\000\012" +
    "\104\260\105\257\106\256\107\261\001\002\000\010\003" +
    "\uff95\005\uff95\014\uff95\001\002\000\010\003\uff80\005\uff80" +
    "\014\uff80\001\002\000\010\003\uff7f\005\uff7f\014\uff7f\001" +
    "\002\000\010\003\uff81\005\uff81\014\uff81\001\002\000\010" +
    "\003\uff7e\005\uff7e\014\uff7e\001\002\000\004\120\251\001" +
    "\002\000\010\003\uff92\005\uff92\014\uff92\001\002\000\022" +
    "\074\267\075\270\076\275\077\273\100\271\101\272\102" +
    "\274\103\265\001\002\000\010\003\uff82\005\uff82\014\uff82" +
    "\001\002\000\010\003\uff98\005\uff98\014\uff98\001\002\000" +
    "\010\003\uff89\005\uff89\014\uff89\001\002\000\010\003\uff88" +
    "\005\uff88\014\uff88\001\002\000\010\003\uff85\005\uff85\014" +
    "\uff85\001\002\000\010\003\uff84\005\uff84\014\uff84\001\002" +
    "\000\010\003\uff86\005\uff86\014\uff86\001\002\000\010\003" +
    "\uff83\005\uff83\014\uff83\001\002\000\010\003\uff87\005\uff87" +
    "\014\uff87\001\002\000\004\117\277\001\002\000\010\003" +
    "\uff8f\005\uff8f\014\uff8f\001\002\000\010\003\uff9f\005\uff9f" +
    "\014\uff9f\001\002\000\010\003\uff90\005\uff90\014\uff90\001" +
    "\002\000\006\110\303\111\305\001\002\000\010\003\uff7d" +
    "\005\uff7d\014\uff7d\001\002\000\010\003\uff94\005\uff94\014" +
    "\uff94\001\002\000\010\003\uff7c\005\uff7c\014\uff7c\001\002" +
    "\000\172\025\101\026\071\027\106\030\146\031\074\032" +
    "\072\033\112\034\132\035\077\036\117\037\107\040\056" +
    "\041\135\042\127\043\130\044\100\045\075\046\062\047" +
    "\115\050\114\051\113\052\140\053\137\054\065\055\136" +
    "\056\125\057\131\060\124\061\126\062\076\063\104\064" +
    "\067\065\150\066\060\067\116\070\151\071\144\072\142" +
    "\073\110\074\147\075\145\076\064\077\121\100\102\101" +
    "\122\102\134\103\057\104\073\105\066\106\123\107\143" +
    "\110\063\111\120\112\312\113\310\114\070\115\141\116" +
    "\061\117\111\120\105\001\002\000\010\003\uff96\005\uff96" +
    "\014\uff96\001\002\000\010\003\uff68\005\uff68\014\uff68\001" +
    "\002\000\010\003\uff67\005\uff67\014\uff67\001\002\000\010" +
    "\003\uff69\005\uff69\014\uff69\001\002\000\004\117\277\001" +
    "\002\000\010\003\uff9a\005\uff9a\014\uff9a\001\002\000\034" +
    "\003\224\044\215\061\233\062\203\063\216\064\226\065" +
    "\205\066\223\067\206\070\234\071\221\072\231\073\211" +
    "\001\002\000\010\002\uffc9\003\uffc9\010\uffc9\001\002\000" +
    "\010\003\uffc8\005\uffc8\014\uffc8\001\002\000\004\031\321" +
    "\001\002\000\006\003\043\013\045\001\002\000\012\003" +
    "\325\032\052\033\054\051\330\001\002\000\010\003\167" +
    "\005\170\014\335\001\002\000\010\003\uffec\005\uffec\014" +
    "\uffec\001\002\000\010\003\uffeb\005\uffeb\014\uffeb\001\002" +
    "\000\010\003\uffed\005\uffed\014\uffed\001\002\000\010\003" +
    "\uffee\005\uffee\014\uffee\001\002\000\004\013\332\001\002" +
    "\000\010\003\uffef\005\uffef\014\uffef\001\002\000\004\116" +
    "\334\001\002\000\010\003\uffa4\005\uffa4\014\uffa4\001\002" +
    "\000\010\003\uff8e\005\uff8e\014\uff8e\001\002\000\012\003" +
    "\325\032\052\033\054\051\330\001\002\000\010\002\ufff1" +
    "\003\ufff1\010\ufff1\001\002\000\010\003\ufff0\005\ufff0\014" +
    "\ufff0\001\002\000\004\060\341\001\002\000\006\003\043" +
    "\013\045\001\002\000\034\003\356\044\215\061\233\062" +
    "\203\063\216\064\226\065\205\066\223\067\206\070\234" +
    "\071\221\072\231\073\211\001\002\000\010\003\uffb1\005" +
    "\uffb1\014\uffb1\001\002\000\010\003\uffb4\005\uffb4\014\uffb4" +
    "\001\002\000\010\003\uffac\005\uffac\014\uffac\001\002\000" +
    "\010\003\uffae\005\uffae\014\uffae\001\002\000\010\003\uffb5" +
    "\005\uffb5\014\uffb5\001\002\000\010\003\uffb3\005\uffb3\014" +
    "\uffb3\001\002\000\010\003\uffb6\005\uffb6\014\uffb6\001\002" +
    "\000\010\003\uffad\005\uffad\014\uffad\001\002\000\010\003" +
    "\uffb0\005\uffb0\014\uffb0\001\002\000\010\003\167\005\170" +
    "\014\362\001\002\000\010\003\uffaf\005\uffaf\014\uffaf\001" +
    "\002\000\010\003\uffaa\005\uffaa\014\uffaa\001\002\000\010" +
    "\003\uffb7\005\uffb7\014\uffb7\001\002\000\010\003\uffb2\005" +
    "\uffb2\014\uffb2\001\002\000\010\003\uffab\005\uffab\014\uffab" +
    "\001\002\000\034\003\356\044\215\061\233\062\203\063" +
    "\216\064\226\065\205\066\223\067\206\070\234\071\221" +
    "\072\231\073\211\001\002\000\010\002\uffb9\003\uffb9\010" +
    "\uffb9\001\002\000\010\003\uffb8\005\uffb8\014\uffb8\001\002" +
    "\000\004\043\366\001\002\000\006\003\043\013\045\001" +
    "\002\000\014\003\375\044\215\045\370\046\377\047\373" +
    "\001\002\000\004\013\u010c\001\002\000\010\003\uffcd\005" +
    "\uffcd\014\uffcd\001\002\000\010\003\uffce\005\uffce\014\uffce" +
    "\001\002\000\004\013\u0107\001\002\000\010\003\167\005" +
    "\170\014\u0105\001\002\000\010\003\uffca\005\uffca\014\uffca" +
    "\001\002\000\010\003\uffcf\005\uffcf\014\uffcf\001\002\000" +
    "\004\013\u0102\001\002\000\010\003\uffcc\005\uffcc\014\uffcc" +
    "\001\002\000\010\003\uffcb\005\uffcb\014\uffcb\001\002\000" +
    "\172\025\101\026\071\027\106\030\146\031\074\032\072" +
    "\033\112\034\132\035\077\036\117\037\107\040\056\041" +
    "\135\042\127\043\130\044\100\045\075\046\062\047\115" +
    "\050\114\051\113\052\140\053\137\054\065\055\136\056" +
    "\125\057\131\060\124\061\126\062\076\063\104\064\067" +
    "\065\150\066\060\067\116\070\151\071\144\072\142\073" +
    "\110\074\147\075\145\076\064\077\121\100\102\101\122" +
    "\102\134\103\057\104\073\105\066\106\123\107\143\110" +
    "\063\111\120\112\312\113\310\114\070\115\141\116\061" +
    "\117\111\120\105\001\002\000\010\003\uff9d\005\uff9d\014" +
    "\uff9d\001\002\000\010\002\uffd1\003\uffd1\010\uffd1\001\002" +
    "\000\014\003\375\044\215\045\370\046\377\047\373\001" +
    "\002\000\010\003\uffd0\005\uffd0\014\uffd0\001\002\000\010" +
    "\052\u010a\053\u0109\054\u0108\001\002\000\010\003\uff8a\005" +
    "\uff8a\014\uff8a\001\002\000\010\003\uff8b\005\uff8b\014\uff8b" +
    "\001\002\000\010\003\uff8c\005\uff8c\014\uff8c\001\002\000" +
    "\010\003\uff9c\005\uff9c\014\uff9c\001\002\000\172\025\101" +
    "\026\071\027\106\030\146\031\074\032\072\033\112\034" +
    "\132\035\077\036\117\037\107\040\056\041\135\042\127" +
    "\043\130\044\100\045\075\046\062\047\115\050\114\051" +
    "\113\052\140\053\137\054\065\055\136\056\125\057\131" +
    "\060\124\061\126\062\076\063\104\064\067\065\150\066" +
    "\060\067\116\070\151\071\144\072\142\073\110\074\147" +
    "\075\145\076\064\077\121\100\102\101\122\102\134\103" +
    "\057\104\073\105\066\106\123\107\143\110\063\111\120" +
    "\112\312\113\310\114\070\115\141\116\061\117\111\120" +
    "\105\001\002\000\010\003\uff9e\005\uff9e\014\uff9e\001\002" +
    "\000\004\043\u010f\001\002\000\006\003\043\013\045\001" +
    "\002\000\004\044\215\001\002\000\006\003\167\005\170" +
    "\001\002\000\006\003\uffd2\005\uffd2\001\002\000\010\002" +
    "\uffd3\003\uffd3\010\uffd3\001\002\000\004\043\u0115\001\002" +
    "\000\006\003\043\013\045\001\002\000\020\003\u011d\044" +
    "\215\045\370\046\377\047\373\050\u0118\051\330\001\002" +
    "\000\010\003\uffd6\005\uffd6\014\uffd6\001\002\000\004\013" +
    "\u0124\001\002\000\010\003\uffd5\005\uffd5\014\uffd5\001\002" +
    "\000\010\003\uffd9\005\uffd9\014\uffd9\001\002\000\010\003" +
    "\uffda\005\uffda\014\uffda\001\002\000\010\003\167\005\170" +
    "\014\u0121\001\002\000\010\003\uffd4\005\uffd4\014\uffd4\001" +
    "\002\000\010\003\uffdb\005\uffdb\014\uffdb\001\002\000\010" +
    "\003\uffd8\005\uffd8\014\uffd8\001\002\000\010\003\uffd7\005" +
    "\uffd7\014\uffd7\001\002\000\020\003\u011d\044\215\045\370" +
    "\046\377\047\373\050\u0118\051\330\001\002\000\010\002" +
    "\uffdd\003\uffdd\010\uffdd\001\002\000\010\003\uffdc\005\uffdc" +
    "\014\uffdc\001\002\000\166\025\101\026\071\027\106\030" +
    "\146\031\074\032\072\033\112\034\132\035\077\036\117" +
    "\037\107\040\056\041\135\042\127\043\130\044\100\045" +
    "\075\046\062\047\115\050\114\051\113\052\140\053\137" +
    "\054\065\055\136\056\125\057\131\060\124\061\126\062" +
    "\076\063\104\064\067\065\150\066\060\067\116\070\151" +
    "\071\144\072\142\073\110\074\147\075\145\076\064\077" +
    "\121\100\102\101\122\102\134\103\057\104\073\105\066" +
    "\106\123\107\143\110\063\111\120\114\157\115\163\116" +
    "\155\117\162\120\161\001\002\000\010\003\uff9b\005\uff9b" +
    "\014\uff9b\001\002\000\004\060\u0127\001\002\000\006\003" +
    "\043\013\045\001\002\000\006\044\215\062\203\001\002" +
    "\000\004\014\u012f\001\002\000\006\003\167\005\170\001" +
    "\002\000\004\014\u012c\001\002\000\004\062\203\001\002" +
    "\000\006\003\uffa8\005\uffa8\001\002\000\010\002\uffa9\003" +
    "\uffa9\010\uffa9\001\002\000\004\044\215\001\002\000\006" +
    "\003\uffa7\005\uffa7\001\002\000\004\031\u0132\001\002\000" +
    "\006\003\043\013\045\001\002\000\004\032\052\001\002" +
    "\000\006\003\uffe1\005\uffe1\001\002\000\006\003\167\005" +
    "\170\001\002\000\010\002\uffe2\003\uffe2\010\uffe2\001\002" +
    "\000\004\031\u0138\001\002\000\006\003\043\013\045\001" +
    "\002\000\014\003\u0141\034\u013c\035\u0140\036\u0144\037\u013f" +
    "\001\002\000\010\003\uffe4\005\uffe4\014\uffe4\001\002\000" +
    "\010\003\167\005\170\014\u014d\001\002\000\004\013\u014b" +
    "\001\002\000\010\003\uffe5\005\uffe5\014\uffe5\001\002\000" +
    "\010\003\uffe6\005\uffe6\014\uffe6\001\002\000\004\013\u0149" +
    "\001\002\000\004\013\u0147\001\002\000\010\003\uffe3\005" +
    "\uffe3\014\uffe3\001\002\000\010\003\uffe7\005\uffe7\014\uffe7" +
    "\001\002\000\010\003\uffe8\005\uffe8\014\uffe8\001\002\000" +
    "\004\013\u0145\001\002\000\166\025\101\026\071\027\106" +
    "\030\146\031\074\032\072\033\112\034\132\035\077\036" +
    "\117\037\107\040\056\041\135\042\127\043\130\044\100" +
    "\045\075\046\062\047\115\050\114\051\113\052\140\053" +
    "\137\054\065\055\136\056\125\057\131\060\124\061\126" +
    "\062\076\063\104\064\067\065\150\066\060\067\116\070" +
    "\151\071\144\072\142\073\110\074\147\075\145\076\064" +
    "\077\121\100\102\101\122\102\134\103\057\104\073\105" +
    "\066\106\123\107\143\110\063\111\120\114\070\115\141" +
    "\116\061\117\111\120\105\001\002\000\010\003\uffa1\005" +
    "\uffa1\014\uffa1\001\002\000\166\025\101\026\071\027\106" +
    "\030\146\031\074\032\072\033\112\034\132\035\077\036" +
    "\117\037\107\040\056\041\135\042\127\043\130\044\100" +
    "\045\075\046\062\047\115\050\114\051\113\052\140\053" +
    "\137\054\065\055\136\056\125\057\131\060\124\061\126" +
    "\062\076\063\104\064\067\065\150\066\060\067\116\070" +
    "\151\071\144\072\142\073\110\074\147\075\145\076\064" +
    "\077\121\100\102\101\122\102\134\103\057\104\073\105" +
    "\066\106\123\107\143\110\063\111\120\114\157\115\163" +
    "\116\155\117\162\120\161\001\002\000\010\003\uffa2\005" +
    "\uffa2\014\uffa2\001\002\000\004\116\334\001\002\000\010" +
    "\003\uffa0\005\uffa0\014\uffa0\001\002\000\166\025\101\026" +
    "\071\027\106\030\146\031\074\032\072\033\112\034\132" +
    "\035\077\036\117\037\107\040\056\041\135\042\127\043" +
    "\130\044\100\045\075\046\062\047\115\050\114\051\113" +
    "\052\140\053\137\054\065\055\136\056\125\057\131\060" +
    "\124\061\126\062\076\063\104\064\067\065\150\066\060" +
    "\067\116\070\151\071\144\072\142\073\110\074\147\075" +
    "\145\076\064\077\121\100\102\101\122\102\134\103\057" +
    "\104\073\105\066\106\123\107\143\110\063\111\120\114" +
    "\157\115\163\116\155\117\162\120\161\001\002\000\010" +
    "\003\uffa3\005\uffa3\014\uffa3\001\002\000\014\003\u0141\034" +
    "\u013c\035\u0140\036\u0144\037\u013f\001\002\000\010\002\uffea" +
    "\003\uffea\010\uffea\001\002\000\010\003\uffe9\005\uffe9\014" +
    "\uffe9\001\002\000\010\003\u0154\015\u0153\016\u0155\001\002" +
    "\000\004\016\u0152\001\002\000\026\025\uff2e\026\uff2e\027" +
    "\uff2e\030\uff2e\040\uff2e\041\uff2e\042\uff2e\055\uff2e\056\uff2e" +
    "\057\uff2e\001\002\000\004\011\u0159\001\002\000\004\013" +
    "\u0158\001\002\000\006\003\u0156\013\u0157\001\002\000\026" +
    "\025\uff30\026\uff30\027\uff30\030\uff30\040\uff30\041\uff30\042" +
    "\uff30\055\uff30\056\uff30\057\uff30\001\002\000\026\025\uff31" +
    "\026\uff31\027\uff31\030\uff31\040\uff31\041\uff31\042\uff31\055" +
    "\uff31\056\uff31\057\uff31\001\002\000\026\025\uff2f\026\uff2f" +
    "\027\uff2f\030\uff2f\040\uff2f\041\uff2f\042\uff2f\055\uff2f\056" +
    "\uff2f\057\uff2f\001\002\000\006\003\017\010\u015a\001\002" +
    "\000\006\003\u0151\012\u0162\001\002\000\006\003\ufffd\010" +
    "\ufffd\001\002\000\006\003\017\010\u015d\001\002\000\006" +
    "\003\u0151\012\u015f\001\002\000\006\003\ufffe\010\ufffe\001" +
    "\002\000\010\003\u0154\016\u0155\020\u0160\001\002\000\004" +
    "\011\u0161\001\002\000\004\002\000\001\002\000\006\003" +
    "\u0154\016\u0155\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0160\000\034\002\021\004\020\005\004\010\007\013" +
    "\017\015\011\017\005\022\015\024\014\027\013\032\012" +
    "\034\010\066\006\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\067\u0136\001\001\000\004" +
    "\067\u0130\001\001\000\004\067\u0125\001\001\000\004\067" +
    "\u0113\001\001\000\004\067\u010d\001\001\000\004\067\364" +
    "\001\001\000\004\067\337\001\001\000\004\067\317\001" +
    "\001\000\004\067\176\001\001\000\004\067\036\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\070\043\001\001\000\002\001\001" +
    "\000\010\016\047\037\052\040\050\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\071\165" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\077\132\105\102\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\040\152\001\001\000" +
    "\002\001\001\000\006\100\155\105\157\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\037\164\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\070\200\001\001\000\036\030\201\031\226\046\216\053" +
    "\206\054\212\055\213\056\227\057\203\060\221\061\224" +
    "\062\211\063\217\064\207\065\231\001\001\000\004\071" +
    "\315\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\075\236\105\240\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\077\245\105\102\001\001\000\002\001\001\000" +
    "\004\104\247\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\104\252\001\001\000\002\001\001\000\004\073" +
    "\254\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\104" +
    "\262\001\001\000\002\001\001\000\004\072\265\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\102" +
    "\277\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\074\303\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\077\310\101\306" +
    "\105\102\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\102\313\001\001" +
    "\000\002\001\001\000\034\031\316\046\216\053\206\054" +
    "\212\055\213\056\227\057\203\060\221\061\224\062\211" +
    "\063\217\064\207\065\231\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\070\321\001\001" +
    "\000\014\006\322\007\330\037\326\040\325\041\323\001" +
    "\001\000\004\071\335\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\103\332\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\007\336\037\326\040" +
    "\325\041\323\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\070\341\001\001\000\036\035" +
    "\353\036\356\046\350\053\343\054\346\055\347\056\357" +
    "\057\342\060\352\061\354\062\345\063\351\064\344\065" +
    "\360\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\071\362\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\034\036\363\046\350\053\343\054\346\055\347\056" +
    "\357\057\342\060\352\061\354\062\345\063\351\064\344" +
    "\065\360\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\070\366\001\001\000\016\025\373" +
    "\026\375\046\371\047\370\050\377\051\u0100\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\071\u0103\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\077\310\101\u0102\105\102\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\026\u0105\046\371" +
    "\047\370\050\377\051\u0100\001\001\000\002\001\001\000" +
    "\004\076\u010a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\077\310\101" +
    "\u010c\105\102\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\070\u010f\001\001\000\006\023\u0110\046\u0111\001" +
    "\001\000\004\071\u0112\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\070\u0115\001\001\000" +
    "\022\020\u011b\021\u011d\041\u0118\046\u011a\047\u0119\050\u011e" +
    "\051\u011f\052\u0116\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\071\u0121\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\021\u0122" +
    "\041\u0118\046\u011a\047\u0119\050\u011e\051\u011f\052\u0116\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\100\u0124" +
    "\105\157\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\070\u0127\001\001\000\010\033\u0129\046\u012a\053\u0128" +
    "\001\001\000\002\001\001\000\004\071\u012d\001\001\000" +
    "\002\001\001\000\004\053\u012c\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u012f\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\070\u0132\001\001\000\006" +
    "\014\u0134\037\u0133\001\001\000\002\001\001\000\004\071" +
    "\u0135\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\070\u0138\001\001\000\016\011\u013a\012\u0142\042\u0141\043" +
    "\u013d\044\u013c\045\u0139\001\001\000\002\001\001\000\004" +
    "\071\u014d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\077\u0145\105\102\001\001\000\002\001\001" +
    "\000\006\100\u0147\105\157\001\001\000\002\001\001\000" +
    "\004\103\u0149\001\001\000\002\001\001\000\006\100\u014b" +
    "\105\157\001\001\000\002\001\001\000\014\012\u014e\042" +
    "\u0141\043\u013d\044\u013c\045\u0139\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\034\003\u015b\004\u015a\005\004\010\007\013\017" +
    "\015\011\017\005\022\015\024\014\027\013\032\012\034" +
    "\010\066\006\001\001\000\002\001\001\000\002\001\001" +
    "\000\032\004\u015d\005\004\010\007\013\017\015\011\017" +
    "\005\022\015\024\014\027\013\032\012\034\010\066\006" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //Listado de errores	
	private FuncionesSolicitudes funcionesSolicitudes = new FuncionesSolicitudes();
	private ArrayList<BloqueParametros> listadoSolicitudes = new ArrayList();
	//Controlador de error sintactico
	
	@Override
	public void syntax_error(Symbol a){
		Token tokenError = (Token) a.value;//lo transformamos en token para obtener su lexema, fila y columna		
		String msgError = "Se esperaba: ";	
		System.out.println("error de sintaxis: linea: "+tokenError.getLexema()+" "+tokenError.getLinea()+" columna: "+tokenError.getColumna());
		
		int linea = tokenError.getLinea();
		int columna = tokenError.getColumna();

		for(int i = 0; i < expected_token_ids().size(); i++){
			//msgError = msgError + mensajes[expected_token_ids().get(i)];
			msgError = msgError + symbl_name_from_id(expected_token_ids().get(i)) + " ";

			if(i < expected_token_ids().size() - 1)
				msgError = msgError + ", ";			
		}
		tokenError = null;

		funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Faltan tokens", msgError, linea, columna);
		//System.out.println(msgError);
		//recibe tipo error, lexema error, mensaje, linea, columna
		//TokenError tokenErrorAux = new TokenError("SINTACTICO", tokenError.getLexema(), msgError, tokenError.getLinea(), tokenError.getColumna());
		//listadoErroresSintacticos.add(tokenErrorAux);
	}

	public ArrayList<TokenError> getListadoErroresParser(){
		return funcionesSolicitudes.getListadoErroresParser();
	}

	public void agregarSolicitud(BloqueParametros bloqueAux){
		this.listadoSolicitudes.add(bloqueAux);
	}

	public ArrayList<BloqueParametros> getListadoSolicitudes(){
		return this.listadoSolicitudes;
	}

	public void imprimirErrores(){
		funcionesSolicitudes.imprimirListadoErrores();
	}

    public parser(LexerIndigo lex){
        super(lex);
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s ::= MENOR EXCLAMACION INICIO_SOLICITUDES MAYOR bloque_solicitudes MENOR EXCLAMACION FIN_SOLICITUDES MAYOR 
            {
              Object RESULT =null;
		 funcionesSolicitudes.imprimirListadoErrores();	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s ::= solicitud 
            {
              Object RESULT =null;
		 funcionesSolicitudes.imprimirListadoErrores();	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bloque_solicitudes ::= bloque_solicitudes solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bloque_solicitudes ::= solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // solicitud ::= solicitud_crear_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para crear usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // solicitud ::= solicitud_modificar_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // solicitud ::= solicitud_eliminar_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // solicitud ::= solicitud_login_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para lgin de usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // solicitud ::= solicitud_nuevo_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud de nuevo formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // solicitud ::= solicitud_eliminar_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar un formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // solicitud ::= solicitud_modificar_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // solicitud ::= solicitud_agregar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para agregar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // solicitud ::= solicitud_modificar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // solicitud ::= solicitud_eliminar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solicitud ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // solicitud_crear_usuario ::= apertura_solicitud_i CREAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_crear_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "CREAR_USUARIO");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_crear_usuario",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // bloque_parametros_crear_usuario ::= bloque_parametros_crear_usuario COMA parametros_crear_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 	
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "CREAR_USUARIO", "CREDENCIALES_USUARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_crear_usuario",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // bloque_parametros_crear_usuario ::= parametros_crear_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "CREAR_USUARIO", "CREDENCIALES_USUARIO");		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_crear_usuario",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parametros_crear_usuario ::= parametro_usuario 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros_crear_usuario ::= parametro_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // parametros_crear_usuario ::= parametro_fecha_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // parametros_crear_usuario ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // solicitud_modificar_usuario ::= apertura_solicitud_i MODIFICAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_modificar_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_USUARIO");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_usuario",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // bloque_parametros_modificar_usuario ::= bloque_parametros_modificar_usuario COMA parametros_modificar_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 	
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "MODIFICAR_USUARIO", "CREDENCIALES_USUARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // bloque_parametros_modificar_usuario ::= parametros_modificar_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "MODIFICAR_USUARIO", "CREDENCIALES_USUARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametros_modificar_usuario ::= parametro_usuario_antiguo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // parametros_modificar_usuario ::= parametro_usuario_nuevo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // parametros_modificar_usuario ::= parametro_nuevo_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametros_modificar_usuario ::= parametro_fecha_modificacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametros_modificar_usuario ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // solicitud_eliminar_usuario ::= apertura_solicitud_i ELIMINAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_eliminar_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
								
		agregarSolicitud(param);
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_usuario",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // bloque_parametros_eliminar_usuario ::= parametro_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
		BloqueParametros bloque = null;
		bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "ELIMINAR_USUARIO", "CREDENCIALES_USUARIO");
		RESULT = bloque;
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_usuario",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // solicitud_login_usuario ::= apertura_solicitud_i LOGIN_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_login_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
								
		agregarSolicitud(param);
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_login_usuario",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // bloque_parametros_login_usuario ::= parametro_usuario COMA parametro_password 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloque = null;
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "LOGIN_USUARIO", "CREDENCIALES_USUARIO"); 
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, b, "LOGIN_USUARIO", "CREDENCIALES_USUARIO"); 
			RESULT = bloque;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_login_usuario",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // bloque_parametros_login_usuario ::= parametro_password COMA parametro_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloque = null;
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "LOGIN_USUARIO", "CREDENCIALES_USUARIO"); 
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, b, "LOGIN_USUARIO", "CREDENCIALES_USUARIO"); 
			RESULT = bloque;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_login_usuario",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // solicitud_nuevo_formulario ::= apertura_solicitud_i NUEVO_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_nuevo_formulario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "NUEVO_FORMULARIO");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_nuevo_formulario",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // bloque_parametros_nuevo_formulario ::= bloque_parametros_nuevo_formulario COMA parametros_nuevo_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "NUEVO_FORMULARIO", "PARAMETROS_FORMULARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_nuevo_formulario",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // bloque_parametros_nuevo_formulario ::= parametros_nuevo_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "NUEVO_FORMULARIO", "PARAMETROS_FORMULARIO");	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_nuevo_formulario",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametros_nuevo_formulario ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametros_nuevo_formulario ::= parametro_titulo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametros_nuevo_formulario ::= parametro_nombre 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // parametros_nuevo_formulario ::= parametro_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // parametros_nuevo_formulario ::= parametro_usuario_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // parametros_nuevo_formulario ::= parametro_fecha_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // parametros_nuevo_formulario ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // solicitud_eliminar_formulario ::= apertura_solicitud_i ELIMINAR_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_eliminar_formulario finalizacion_solicitud 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
								
		agregarSolicitud(param);
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_formulario",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // bloque_parametros_eliminar_formulario ::= parametro_id 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
		BloqueParametros bloque = null;
		bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "ELIMINAR_FORMULARIO", "PARAMETROS_FORMULARIO"); 
		RESULT = bloque;
	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_formulario",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // solicitud_modificar_formulario ::= apertura_solicitud_i MODIFICAR_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_modificar_formulario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_FORMULARIO");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_formulario",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // bloque_parametros_modificar_formulario ::= bloque_parametros_modificar_formulario COMA parametros_modificar_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "MODIFICAR_FORMULARIO", "PARAMETROS_FORMULARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_formulario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // bloque_parametros_modificar_formulario ::= parametros_modificar_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "MODIFICAR_FORMULARIO", "PARAMETROS_FORMULARIO");		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_formulario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametros_modificar_formulario ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parametros_modificar_formulario ::= parametro_titulo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // parametros_modificar_formulario ::= parametro_nombre 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // parametros_modificar_formulario ::= parametro_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametros_modificar_formulario ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // solicitud_agregar_componente ::= apertura_solicitud_i AGREGAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_agregar_componente finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "AGREGAR_COMPONENTE");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_agregar_componente",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // bloque_parametros_agregar_componente ::= bloque_parametros_agregar_componente COMA parametros_agregar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "AGREGAR_COMPONENTE", "PARAMETROS_COMPONENTE");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_agregar_componente",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // bloque_parametros_agregar_componente ::= parametros_agregar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "AGREGAR_COMPONENTE", "PARAMETROS_COMPONENTE");	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_agregar_componente",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parametros_agregar_componente ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // parametros_agregar_componente ::= parametro_nombre_campo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // parametros_agregar_componente ::= parametro_formulario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametros_agregar_componente ::= parametro_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parametros_agregar_componente ::= parametro_indice 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // parametros_agregar_componente ::= parametro_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // parametros_agregar_componente ::= parametro_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // parametros_agregar_componente ::= parametro_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // parametros_agregar_componente ::= parametro_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // parametros_agregar_componente ::= parametro_filas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametros_agregar_componente ::= parametro_columnas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametros_agregar_componente ::= parametro_URL 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametros_agregar_componente ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // solicitud_modificar_componente ::= apertura_solicitud_i MODIFICAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_modificar_componente finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_COMPONENTE");
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_componente",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // bloque_parametros_modificar_componente ::= bloque_parametros_modificar_componente COMA parametros_modificar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(a, b, "MODIFICAR_COMPONENTE", "PARAMETROS_COMPONENTE");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_componente",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // bloque_parametros_modificar_componente ::= parametros_modificar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			RESULT = funcionesSolicitudes.agregarParametroABloque(null, a, "MODIFICAR_COMPONENTE", "PARAMETROS_COMPONENTE");			
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_componente",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // parametros_modificar_componente ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametros_modificar_componente ::= parametro_nombre_campo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametros_modificar_componente ::= parametro_formulario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros_modificar_componente ::= parametro_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros_modificar_componente ::= parametro_indice 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros_modificar_componente ::= parametro_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // parametros_modificar_componente ::= parametro_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // parametros_modificar_componente ::= parametro_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // parametros_modificar_componente ::= parametro_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametros_modificar_componente ::= parametro_filas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametros_modificar_componente ::= parametro_columnas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parametros_modificar_componente ::= parametro_URL 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // parametros_modificar_componente ::= error 
            {
              TokenParametro RESULT =null;
		 RESULT = null; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // solicitud_eliminar_componente ::= apertura_solicitud_i ELIMINAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_eliminar_componente finalizacion_solicitud 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
								
			agregarSolicitud(param);
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_componente",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // bloque_parametros_eliminar_componente ::= parametro_id COMA parametro_formulario_id 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloque = null;
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "ELIMINAR_COMPONENTE", "PARAMETROS_COMPONENTE"); 
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, b, "ELIMINAR_COMPONENTE", "PARAMETROS_COMPONENTE"); 
			RESULT = bloque;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_componente",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // bloque_parametros_eliminar_componente ::= parametro_formulario_id COMA parametro_id 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloque = null;
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, a, "ELIMINAR_COMPONENTE", "PARAMETROS_COMPONENTE"); 
			bloque = funcionesSolicitudes.agregarParametroABloque(bloque, b, "ELIMINAR_COMPONENTE", "PARAMETROS_COMPONENTE"); 
			RESULT = bloque;
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_componente",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametro_usuario ::= USUARIO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // parametro_password ::= PASSWORD DOS_PUNTOS valores_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_password",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // parametro_fecha_creacion ::= FECHA_CREACION DOS_PUNTOS valores_fecha 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha_creacion",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametro_usuario_antiguo ::= USUARIO_ANTIGUO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_antiguo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametro_usuario_nuevo ::= USUARIO_NUEVO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_nuevo",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametro_nuevo_password ::= NUEVO_PASSWORD DOS_PUNTOS valores_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nuevo_password",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametro_fecha_modificacion ::= FECHA_MODIFICACION DOS_PUNTOS valores_fecha 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha_modificacion",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametro_id ::= ID DOS_PUNTOS valores_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_id",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // parametro_titulo ::= TITULO DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_titulo",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // parametro_nombre ::= NOMBRE DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nombre",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // parametro_tema ::= TEMA DOS_PUNTOS valores_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_tema",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // parametro_usuario_creacion ::= USUARIO_CREACION DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_creacion",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // parametro_formulario_id ::= FORMULARIO DOS_PUNTOS valores_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_formulario_id",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // parametro_nombre_campo ::= NOMBRE_CAMPO DOS_PUNTOS valores_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nombre_campo",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // parametro_clase ::= CLASE DOS_PUNTOS valores_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // parametro_indice ::= INDICE DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_indice",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // parametro_texto_visible ::= TEXTO_VISIBLE DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_texto_visible",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // parametro_alineacion ::= ALINEACION DOS_PUNTOS valores_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_alineacion",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // parametro_requerido ::= REQUERIDO DOS_PUNTOS valores_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_requerido",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // parametro_opciones ::= OPCIONES DOS_PUNTOS valores_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_opciones",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // parametro_filas ::= FILAS DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_filas",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // parametro_columnas ::= COLUMNAS DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_columnas",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // parametro_URL ::= URL DOS_PUNTOS 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_URL",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // valores_id ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_id",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // valores_fecha ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_fecha",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // valores_digito ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_digito",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // valores_tema ::= DARK 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // valores_tema ::= BLUE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // valores_tema ::= WHITE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // valores_clase ::= CAMPO_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // valores_clase ::= AREA_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // valores_clase ::= CHECKBOX 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // valores_clase ::= RADIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // valores_clase ::= FICHERO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // valores_clase ::= IMAGEN 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // valores_clase ::= COMBO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // valores_clase ::= BOTON 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // valores_alineacion ::= CENTRO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // valores_alineacion ::= DERECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // valores_alineacion ::= IZQUIERDA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // valores_alineacion ::= JUSTIFICAR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // valores_requerido ::= SI 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_requerido",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // valores_requerido ::= NO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_requerido",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // valores_usuario_id ::= VALOR_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // valores_usuario_id ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // valores_usuario_id ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // valores_usuario_id ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // valores_usuario_id ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // valores_usuario_id ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // valores_password ::= VALOR_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // valores_password ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // valores_password ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // valores_password ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // valores_password ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // valores_password ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // valores_opciones ::= VALOR_ITEMS_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // valores_opciones ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // valores_opciones ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // valores_opciones ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // valores_opciones ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // valores_opciones ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // valores_texto_visible ::= VALOR_TEXTO_VISIBLE_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // valores_texto_visible ::= VALOR_ITEMS_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // valores_texto_visible ::= valores_password 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // valores_reservados ::= CREAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // valores_reservados ::= MODIFICAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // valores_reservados ::= ELIMINAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // valores_reservados ::= LOGIN_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // valores_reservados ::= CREDENCIALES_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // valores_reservados ::= USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // valores_reservados ::= PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // valores_reservados ::= USUARIO_ANTIGUO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // valores_reservados ::= USUARIO_NUEVO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // valores_reservados ::= NUEVO_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // valores_reservados ::= FECHA_MODIFICACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // valores_reservados ::= NUEVO_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // valores_reservados ::= ELIMINAR_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // valores_reservados ::= MODIFICAR_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // valores_reservados ::= PARAMETROS_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // valores_reservados ::= ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // valores_reservados ::= TITULO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // valores_reservados ::= NOMBRE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // valores_reservados ::= TEMA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // valores_reservados ::= USUARIO_CREACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // valores_reservados ::= FECHA_CREACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // valores_reservados ::= DARK 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // valores_reservados ::= BLUE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // valores_reservados ::= WHITE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // valores_reservados ::= AGREGAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // valores_reservados ::= MODIFICAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // valores_reservados ::= ELIMINAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // valores_reservados ::= PARAMETROS_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // valores_reservados ::= NOMBRE_CAMPO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // valores_reservados ::= FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // valores_reservados ::= CLASE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // valores_reservados ::= INDICE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // valores_reservados ::= TEXTO_VISIBLE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // valores_reservados ::= ALINEACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // valores_reservados ::= REQUERIDO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // valores_reservados ::= OPCIONES 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // valores_reservados ::= FILAS 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // valores_reservados ::= COLUMNAS 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // valores_reservados ::= URL 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // valores_reservados ::= CAMPO_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // valores_reservados ::= AREA_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // valores_reservados ::= CHECKBOX 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // valores_reservados ::= RADIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // valores_reservados ::= FICHERO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // valores_reservados ::= IMAGEN 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // valores_reservados ::= COMBO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // valores_reservados ::= BOTON 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // valores_reservados ::= CENTRO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // valores_reservados ::= IZQUIERDA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // valores_reservados ::= DERECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // valores_reservados ::= JUSTIFICAR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // valores_reservados ::= SI 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // valores_reservados ::= NO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // apertura_solicitud_i ::= MENOR EXCLAMACION INICIO_SOLICITUD DOS_PUNTOS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_i",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // apertura_solicitud_i ::= MENOR EXCLAMACION INICIO_SOLICITUD error 
            {
              Object RESULT =null;
		 
			String mensaje = "Se esperaba el token \"DOS_PUNTOS\" = ':'";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_i",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // apertura_solicitud_i ::= MENOR EXCLAMACION error DOS_PUNTOS 
            {
              Object RESULT =null;
		 
			String mensaje = "Se esperaba el token \"INICIO_SOLICITUD\" = 'ini_solicitud'";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_i",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // apertura_solicitud_i ::= MENOR error INICIO_SOLICITUD 
            {
              Object RESULT =null;
		 
			String mensaje = "Se esperaba el token \"EXCLAMACION\" = '!'";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_i",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // apertura_solicitud_ii ::= MAYOR LLAVES_INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_ii",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // apertura_solicitud_ii ::= error 
            {
              Object RESULT =null;
		 
			String mensaje = "Se esperaba el token \"> {\", revise la entrada, tiene mas de un token invalido";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_ii",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // apertura_bloque_parametros ::= DOS_PUNTOS CORCHETES_INICIO LLAVES_INICIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_bloque_parametros",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // apertura_bloque_parametros ::= error 
            {
              Token RESULT =null;
		 
			String mensaje = "Se esperaba el token \": [ {\", revise la entrada, tiene mas de un token invalido";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_bloque_parametros",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // finalizacion_solicitud ::= LLAVES_FIN CORCHETES_FIN LLAVES_FIN MENOR FIN_SOLICITUD EXCLAMACION MAYOR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("finalizacion_solicitud",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // finalizacion_solicitud ::= error 
            {
              Token RESULT =null;
		 
			String mensaje = "Se esperaba el token \"} ] } < fin_solicitud ! >\", revise la entrada, tiene mas de un token invalido";			
			funcionesSolicitudes.agregarNuevoError("ERROR SINTACTICO", "Se esperaba otro token", mensaje, 0, 0); 	
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("finalizacion_solicitud",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}