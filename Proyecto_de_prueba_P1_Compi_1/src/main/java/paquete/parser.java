
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615
//----------------------------------------------------

package paquete;

import java_cup.runtime.*;
import paquete.sym;
import paquete.LexerIndigo;
import paquete.Token;
import paquete.TokenError;
import paquete.TokenParametro;
import paquete.BloqueParametros;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\315\000\002\002\004\000\002\002\013\000\002\002" +
    "\003\000\002\003\004\000\002\003\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\003\000\002\004\003\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\005" +
    "\011\000\002\006\005\000\002\006\003\000\002\007\003" +
    "\000\002\007\003\000\002\007\003\000\002\010\011\000" +
    "\002\011\005\000\002\011\003\000\002\012\003\000\002" +
    "\012\003\000\002\012\003\000\002\012\003\000\002\013" +
    "\011\000\002\014\003\000\002\015\011\000\002\016\005" +
    "\000\002\016\005\000\002\017\011\000\002\020\005\000" +
    "\002\020\003\000\002\021\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\022\011\000\002\023\003\000\002\024\011" +
    "\000\002\025\005\000\002\025\003\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\026\003\000\002" +
    "\027\011\000\002\030\005\000\002\030\003\000\002\031" +
    "\003\000\002\031\003\000\002\031\003\000\002\031\003" +
    "\000\002\031\003\000\002\031\003\000\002\031\003\000" +
    "\002\031\003\000\002\031\003\000\002\031\003\000\002" +
    "\031\003\000\002\031\003\000\002\034\011\000\002\035" +
    "\005\000\002\035\003\000\002\036\003\000\002\036\003" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\036\003\000\002\036\003\000\002" +
    "\036\003\000\002\036\003\000\002\036\003\000\002\036" +
    "\003\000\002\032\011\000\002\033\005\000\002\033\005" +
    "\000\002\037\005\000\002\040\005\000\002\041\005\000" +
    "\002\042\005\000\002\043\005\000\002\044\005\000\002" +
    "\045\005\000\002\046\005\000\002\047\005\000\002\050" +
    "\005\000\002\051\005\000\002\052\005\000\002\053\005" +
    "\000\002\054\005\000\002\055\005\000\002\056\005\000" +
    "\002\057\005\000\002\060\005\000\002\061\005\000\002" +
    "\062\005\000\002\063\005\000\002\064\005\000\002\065" +
    "\004\000\002\102\003\000\002\103\003\000\002\104\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\072\003\000\002\072\003\000\002\072\003\000\002" +
    "\072\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\072\003\000\002\073\003\000\002\073\003" +
    "\000\002\073\003\000\002\073\003\000\002\074\003\000" +
    "\002\074\003\000\002\100\003\000\002\100\003\000\002" +
    "\100\003\000\002\100\003\000\002\100\003\000\002\100" +
    "\003\000\002\077\003\000\002\077\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\077\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\075\003\000\002\075\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\003\000\002\105\003\000\002\105\003" +
    "\000\002\066\006\000\002\067\004\000\002\070\005\000" +
    "\002\071\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0151\000\004\010\004\001\002\000\004\012\u0146\001" +
    "\002\000\006\002\ufffc\010\ufffc\001\002\000\006\002\ufff8" +
    "\010\ufff8\001\002\000\026\025\032\026\024\027\023\030" +
    "\034\040\026\041\027\042\030\055\033\056\031\057\025" +
    "\001\002\000\006\002\ufffb\010\ufffb\001\002\000\006\002" +
    "\ufff4\010\ufff4\001\002\000\006\002\ufff9\010\ufff9\001\002" +
    "\000\006\002\ufff3\010\ufff3\001\002\000\006\002\ufff5\010" +
    "\ufff5\001\002\000\006\002\ufff6\010\ufff6\001\002\000\006" +
    "\002\ufff7\010\ufff7\001\002\000\006\002\ufffa\010\ufffa\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\022\001\002" +
    "\000\004\002\001\001\002\000\004\011\036\001\002\000" +
    "\004\011\036\001\002\000\004\011\036\001\002\000\004" +
    "\011\036\001\002\000\004\011\036\001\002\000\004\011" +
    "\036\001\002\000\004\011\036\001\002\000\004\011\036" +
    "\001\002\000\004\011\036\001\002\000\004\011\036\001" +
    "\002\000\004\031\040\001\002\000\004\004\037\001\002" +
    "\000\010\031\uff37\043\uff37\060\uff37\001\002\000\004\013" +
    "\042\001\002\000\006\032\047\033\051\001\002\000\004" +
    "\006\043\001\002\000\004\004\044\001\002\000\060\032" +
    "\uff36\033\uff36\034\uff36\035\uff36\036\uff36\037\uff36\044\uff36" +
    "\045\uff36\046\uff36\047\uff36\050\uff36\051\uff36\061\uff36\062" +
    "\uff36\063\uff36\064\uff36\065\uff36\066\uff36\067\uff36\070\uff36" +
    "\071\uff36\072\uff36\073\uff36\001\002\000\004\005\164\001" +
    "\002\000\004\014\161\001\002\000\004\013\151\001\002" +
    "\000\004\014\147\001\002\000\004\013\052\001\002\000" +
    "\166\025\075\026\066\027\103\030\143\031\070\032\067" +
    "\033\107\034\127\035\074\036\113\037\104\040\053\041" +
    "\132\042\124\043\125\044\076\045\072\046\057\047\112" +
    "\050\111\051\110\052\135\053\134\054\062\055\133\056" +
    "\123\057\126\060\117\061\122\062\073\063\101\064\064" +
    "\065\145\066\055\067\114\070\146\071\141\072\137\073" +
    "\105\074\144\075\142\076\061\077\115\100\077\101\121" +
    "\102\131\103\054\104\071\105\063\106\120\107\140\110" +
    "\060\111\116\114\065\115\136\116\056\117\106\120\102" +
    "\001\002\000\006\005\uff62\014\uff62\001\002\000\006\005" +
    "\uff3f\014\uff3f\001\002\000\006\005\uff4c\014\uff4c\001\002" +
    "\000\006\005\uff7a\014\uff7a\001\002\000\006\005\uff5c\014" +
    "\uff5c\001\002\000\006\005\uff3a\014\uff3a\001\002\000\006" +
    "\005\uff44\014\uff44\001\002\000\006\005\uff56\014\uff56\001" +
    "\002\000\006\005\uff3d\014\uff3d\001\002\000\006\005\uff4e" +
    "\014\uff4e\001\002\000\006\005\uff78\014\uff78\001\002\000" +
    "\006\005\uff6c\014\uff6c\001\002\000\006\005\uff68\014\uff68" +
    "\001\002\000\006\005\uff69\014\uff69\001\002\000\006\005" +
    "\uff3e\014\uff3e\001\002\000\006\005\uff5d\014\uff5d\001\002" +
    "\000\006\005\uff50\014\uff50\001\002\000\006\005\uff65\014" +
    "\uff65\001\002\000\006\005\uff6d\014\uff6d\001\002\000\006" +
    "\005\uff5e\014\uff5e\001\002\000\006\005\uff42\014\uff42\001" +
    "\002\000\006\005\uff77\014\uff77\001\002\000\006\005\uff4f" +
    "\014\uff4f\001\002\000\006\005\uff7b\014\uff7b\001\002\000" +
    "\006\005\uff6b\014\uff6b\001\002\000\006\005\uff63\014\uff63" +
    "\001\002\000\006\005\uff47\014\uff47\001\002\000\006\005" +
    "\uff79\014\uff79\001\002\000\006\005\uff67\014\uff67\001\002" +
    "\000\006\005\uff59\014\uff59\001\002\000\006\005\uff5a\014" +
    "\uff5a\001\002\000\006\005\uff5b\014\uff5b\001\002\000\006" +
    "\005\uff64\014\uff64\001\002\000\006\005\uff4b\014\uff4b\001" +
    "\002\000\006\005\uff43\014\uff43\001\002\000\006\005\uff39" +
    "\014\uff39\001\002\000\006\005\uff52\014\uff52\001\002\000" +
    "\006\005\uff3c\014\uff3c\001\002\000\006\005\uff41\014\uff41" +
    "\001\002\000\006\005\uff51\014\uff51\001\002\000\006\005" +
    "\uff54\014\uff54\001\002\000\006\005\uff60\014\uff60\001\002" +
    "\000\006\005\uff5f\014\uff5f\001\002\000\006\005\uff53\014" +
    "\uff53\001\002\000\006\005\uff66\014\uff66\001\002\000\006" +
    "\005\uffac\014\uffac\001\002\000\006\005\uff40\014\uff40\001" +
    "\002\000\006\005\uff61\014\uff61\001\002\000\006\005\uff55" +
    "\014\uff55\001\002\000\006\005\uff57\014\uff57\001\002\000" +
    "\006\005\uff58\014\uff58\001\002\000\006\005\uff7c\014\uff7c" +
    "\001\002\000\006\005\uff48\014\uff48\001\002\000\006\005" +
    "\uff3b\014\uff3b\001\002\000\006\005\uff49\014\uff49\001\002" +
    "\000\006\005\uff45\014\uff45\001\002\000\006\005\uff6a\014" +
    "\uff6a\001\002\000\006\005\uff46\014\uff46\001\002\000\006" +
    "\005\uff4d\014\uff4d\001\002\000\006\005\uff4a\014\uff4a\001" +
    "\002\000\004\033\051\001\002\000\004\005\uffe2\001\002" +
    "\000\166\025\075\026\066\027\103\030\143\031\070\032" +
    "\067\033\107\034\127\035\074\036\113\037\104\040\053" +
    "\041\132\042\124\043\125\044\076\045\072\046\057\047" +
    "\112\050\111\051\110\052\135\053\134\054\062\055\133" +
    "\056\123\057\126\060\117\061\122\062\073\063\101\064" +
    "\064\065\145\066\055\067\114\070\146\071\141\072\137" +
    "\073\105\074\144\075\142\076\061\077\115\100\077\101" +
    "\121\102\131\103\054\104\071\105\063\106\120\107\140" +
    "\110\060\111\116\114\154\115\160\116\152\117\157\120" +
    "\156\001\002\000\006\005\uff80\014\uff80\001\002\000\006" +
    "\005\uffad\014\uffad\001\002\000\006\005\uff7e\014\uff7e\001" +
    "\002\000\006\005\uff7d\014\uff7d\001\002\000\006\005\uff81" +
    "\014\uff81\001\002\000\006\005\uff7f\014\uff7f\001\002\000" +
    "\006\005\uff82\014\uff82\001\002\000\004\032\047\001\002" +
    "\000\004\005\uffe1\001\002\000\006\002\uffe3\010\uffe3\001" +
    "\002\000\004\007\165\001\002\000\004\005\166\001\002" +
    "\000\004\010\167\001\002\000\004\017\170\001\002\000" +
    "\004\012\171\001\002\000\004\011\172\001\002\000\006" +
    "\002\uff35\010\uff35\001\002\000\004\060\174\001\002\000" +
    "\004\013\042\001\002\000\032\044\211\061\226\062\177" +
    "\063\212\064\221\065\201\066\217\067\202\070\227\071" +
    "\215\072\224\073\205\001\002\000\006\005\164\014\310" +
    "\001\002\000\004\013\306\001\002\000\006\005\uffc6\014" +
    "\uffc6\001\002\000\004\013\304\001\002\000\004\013\300" +
    "\001\002\000\006\005\uffc9\014\uffc9\001\002\000\006\005" +
    "\uffc1\014\uffc1\001\002\000\004\013\277\001\002\000\006" +
    "\005\uffc3\014\uffc3\001\002\000\006\005\uffca\014\uffca\001" +
    "\002\000\006\005\uffc8\014\uffc8\001\002\000\004\013\274" +
    "\001\002\000\004\013\262\001\002\000\006\005\uffcb\014" +
    "\uffcb\001\002\000\006\005\uffc2\014\uffc2\001\002\000\004" +
    "\013\260\001\002\000\006\005\uffc5\014\uffc5\001\002\000" +
    "\004\013\252\001\002\000\006\005\uffc4\014\uffc4\001\002" +
    "\000\004\013\250\001\002\000\006\005\uffcc\014\uffcc\001" +
    "\002\000\006\005\uffc7\014\uffc7\001\002\000\004\013\245" +
    "\001\002\000\006\005\uffc0\014\uffc0\001\002\000\004\013" +
    "\240\001\002\000\004\013\230\001\002\000\166\025\075" +
    "\026\066\027\103\030\143\031\070\032\067\033\107\034" +
    "\127\035\074\036\113\037\104\040\053\041\132\042\124" +
    "\043\125\044\076\045\072\046\057\047\112\050\111\051" +
    "\110\052\135\053\134\054\062\055\133\056\123\057\126" +
    "\060\117\061\122\062\073\063\101\064\064\065\145\066" +
    "\055\067\114\070\146\071\141\072\137\073\105\074\144" +
    "\075\142\076\061\077\115\100\077\101\121\102\131\103" +
    "\054\104\071\105\063\106\120\107\140\110\060\111\116" +
    "\113\235\114\233\116\231\117\237\120\236\001\002\000" +
    "\006\005\uff73\014\uff73\001\002\000\006\005\uff9a\014\uff9a" +
    "\001\002\000\006\005\uff75\014\uff75\001\002\000\006\005" +
    "\uff71\014\uff71\001\002\000\006\005\uff76\014\uff76\001\002" +
    "\000\006\005\uff74\014\uff74\001\002\000\006\005\uff72\014" +
    "\uff72\001\002\000\172\025\075\026\066\027\103\030\143" +
    "\031\070\032\067\033\107\034\127\035\074\036\113\037" +
    "\104\040\053\041\132\042\124\043\125\044\076\045\072" +
    "\046\057\047\112\050\111\051\110\052\135\053\134\054" +
    "\062\055\133\056\123\057\126\060\117\061\122\062\073" +
    "\063\101\064\064\065\145\066\055\067\114\070\146\071" +
    "\141\072\137\073\105\074\144\075\142\076\061\077\115" +
    "\100\077\101\121\102\131\103\054\104\071\105\063\106" +
    "\120\107\140\110\060\111\116\112\244\113\242\114\065" +
    "\115\136\116\056\117\106\120\102\001\002\000\006\005" +
    "\uffa0\014\uffa0\001\002\000\006\005\uff6f\014\uff6f\001\002" +
    "\000\006\005\uff6e\014\uff6e\001\002\000\006\005\uff70\014" +
    "\uff70\001\002\000\004\120\247\001\002\000\006\005\uff98" +
    "\014\uff98\001\002\000\006\005\uff94\014\uff94\001\002\000" +
    "\004\120\247\001\002\000\006\005\uff9e\014\uff9e\001\002" +
    "\000\012\104\256\105\255\106\253\107\257\001\002\000" +
    "\006\005\uff87\014\uff87\001\002\000\006\005\uff9c\014\uff9c" +
    "\001\002\000\006\005\uff86\014\uff86\001\002\000\006\005" +
    "\uff88\014\uff88\001\002\000\006\005\uff85\014\uff85\001\002" +
    "\000\004\120\247\001\002\000\006\005\uff99\014\uff99\001" +
    "\002\000\022\074\265\075\266\076\272\077\271\100\267" +
    "\101\270\102\273\103\263\001\002\000\006\005\uff89\014" +
    "\uff89\001\002\000\006\005\uff9f\014\uff9f\001\002\000\006" +
    "\005\uff90\014\uff90\001\002\000\006\005\uff8f\014\uff8f\001" +
    "\002\000\006\005\uff8c\014\uff8c\001\002\000\006\005\uff8b" +
    "\014\uff8b\001\002\000\006\005\uff8d\014\uff8d\001\002\000" +
    "\006\005\uff8e\014\uff8e\001\002\000\006\005\uff8a\014\uff8a" +
    "\001\002\000\004\117\275\001\002\000\006\005\uff96\014" +
    "\uff96\001\002\000\006\005\uffa6\014\uffa6\001\002\000\006" +
    "\005\uff97\014\uff97\001\002\000\006\110\301\111\303\001" +
    "\002\000\006\005\uff84\014\uff84\001\002\000\006\005\uff9b" +
    "\014\uff9b\001\002\000\006\005\uff83\014\uff83\001\002\000" +
    "\172\025\075\026\066\027\103\030\143\031\070\032\067" +
    "\033\107\034\127\035\074\036\113\037\104\040\053\041" +
    "\132\042\124\043\125\044\076\045\072\046\057\047\112" +
    "\050\111\051\110\052\135\053\134\054\062\055\133\056" +
    "\123\057\126\060\117\061\122\062\073\063\101\064\064" +
    "\065\145\066\055\067\114\070\146\071\141\072\137\073" +
    "\105\074\144\075\142\076\061\077\115\100\077\101\121" +
    "\102\131\103\054\104\071\105\063\106\120\107\140\110" +
    "\060\111\116\112\244\113\242\114\065\115\136\116\056" +
    "\117\106\120\102\001\002\000\006\005\uff9d\014\uff9d\001" +
    "\002\000\004\117\275\001\002\000\006\005\uffa1\014\uffa1" +
    "\001\002\000\032\044\211\061\226\062\177\063\212\064" +
    "\221\065\201\066\217\067\202\070\227\071\215\072\224" +
    "\073\205\001\002\000\006\002\uffce\010\uffce\001\002\000" +
    "\006\005\uffcd\014\uffcd\001\002\000\004\031\314\001\002" +
    "\000\004\013\042\001\002\000\010\032\047\033\051\051" +
    "\322\001\002\000\006\005\164\014\330\001\002\000\006" +
    "\005\uffee\014\uffee\001\002\000\006\005\uffef\014\uffef\001" +
    "\002\000\006\005\ufff0\014\ufff0\001\002\000\004\013\324" +
    "\001\002\000\006\005\uffed\014\uffed\001\002\000\004\116" +
    "\325\001\002\000\006\005\uff95\014\uff95\001\002\000\006" +
    "\005\uffab\014\uffab\001\002\000\006\002\ufff2\010\ufff2\001" +
    "\002\000\010\032\047\033\051\051\322\001\002\000\006" +
    "\005\ufff1\014\ufff1\001\002\000\004\060\333\001\002\000" +
    "\004\013\042\001\002\000\032\044\211\061\226\062\177" +
    "\063\212\064\221\065\201\066\217\067\202\070\227\071" +
    "\215\072\224\073\205\001\002\000\006\005\uffb7\014\uffb7" +
    "\001\002\000\006\005\uffba\014\uffba\001\002\000\006\005" +
    "\uffb2\014\uffb2\001\002\000\006\005\uffb4\014\uffb4\001\002" +
    "\000\006\005\uffbb\014\uffbb\001\002\000\006\005\uffb9\014" +
    "\uffb9\001\002\000\006\005\uffbc\014\uffbc\001\002\000\006" +
    "\005\uffb3\014\uffb3\001\002\000\006\005\uffb6\014\uffb6\001" +
    "\002\000\006\005\164\014\353\001\002\000\006\005\uffb5" +
    "\014\uffb5\001\002\000\006\005\uffbd\014\uffbd\001\002\000" +
    "\006\005\uffb8\014\uffb8\001\002\000\006\005\uffb1\014\uffb1" +
    "\001\002\000\032\044\211\061\226\062\177\063\212\064" +
    "\221\065\201\066\217\067\202\070\227\071\215\072\224" +
    "\073\205\001\002\000\006\002\uffbf\010\uffbf\001\002\000" +
    "\006\005\uffbe\014\uffbe\001\002\000\004\043\357\001\002" +
    "\000\004\013\042\001\002\000\012\044\211\045\361\046" +
    "\367\047\364\001\002\000\004\013\u0104\001\002\000\006" +
    "\005\uffd1\014\uffd1\001\002\000\006\005\uffd2\014\uffd2\001" +
    "\002\000\004\013\377\001\002\000\006\005\164\014\374" +
    "\001\002\000\006\005\uffd3\014\uffd3\001\002\000\004\013" +
    "\372\001\002\000\006\005\uffd0\014\uffd0\001\002\000\006" +
    "\005\uffcf\014\uffcf\001\002\000\172\025\075\026\066\027" +
    "\103\030\143\031\070\032\067\033\107\034\127\035\074" +
    "\036\113\037\104\040\053\041\132\042\124\043\125\044" +
    "\076\045\072\046\057\047\112\050\111\051\110\052\135" +
    "\053\134\054\062\055\133\056\123\057\126\060\117\061" +
    "\122\062\073\063\101\064\064\065\145\066\055\067\114" +
    "\070\146\071\141\072\137\073\105\074\144\075\142\076" +
    "\061\077\115\100\077\101\121\102\131\103\054\104\071" +
    "\105\063\106\120\107\140\110\060\111\116\112\244\113" +
    "\242\114\065\115\136\116\056\117\106\120\102\001\002" +
    "\000\006\005\uffa4\014\uffa4\001\002\000\012\044\211\045" +
    "\361\046\367\047\364\001\002\000\006\002\uffd5\010\uffd5" +
    "\001\002\000\006\005\uffd4\014\uffd4\001\002\000\010\052" +
    "\u0102\053\u0101\054\u0100\001\002\000\006\005\uff91\014\uff91" +
    "\001\002\000\006\005\uff92\014\uff92\001\002\000\006\005" +
    "\uff93\014\uff93\001\002\000\006\005\uffa3\014\uffa3\001\002" +
    "\000\172\025\075\026\066\027\103\030\143\031\070\032" +
    "\067\033\107\034\127\035\074\036\113\037\104\040\053" +
    "\041\132\042\124\043\125\044\076\045\072\046\057\047" +
    "\112\050\111\051\110\052\135\053\134\054\062\055\133" +
    "\056\123\057\126\060\117\061\122\062\073\063\101\064" +
    "\064\065\145\066\055\067\114\070\146\071\141\072\137" +
    "\073\105\074\144\075\142\076\061\077\115\100\077\101" +
    "\121\102\131\103\054\104\071\105\063\106\120\107\140" +
    "\110\060\111\116\112\244\113\242\114\065\115\136\116" +
    "\056\117\106\120\102\001\002\000\006\005\uffa5\014\uffa5" +
    "\001\002\000\004\043\u0107\001\002\000\004\013\042\001" +
    "\002\000\004\044\211\001\002\000\004\005\164\001\002" +
    "\000\004\005\uffd6\001\002\000\006\002\uffd7\010\uffd7\001" +
    "\002\000\004\043\u010d\001\002\000\004\013\042\001\002" +
    "\000\016\044\211\045\361\046\367\047\364\050\u0110\051" +
    "\322\001\002\000\006\005\uffd9\014\uffd9\001\002\000\004" +
    "\013\u011b\001\002\000\006\005\uffd8\014\uffd8\001\002\000" +
    "\006\005\uffdc\014\uffdc\001\002\000\006\005\uffdd\014\uffdd" +
    "\001\002\000\006\005\164\014\u0118\001\002\000\006\005" +
    "\uffde\014\uffde\001\002\000\006\005\uffdb\014\uffdb\001\002" +
    "\000\006\005\uffda\014\uffda\001\002\000\016\044\211\045" +
    "\361\046\367\047\364\050\u0110\051\322\001\002\000\006" +
    "\002\uffe0\010\uffe0\001\002\000\006\005\uffdf\014\uffdf\001" +
    "\002\000\166\025\075\026\066\027\103\030\143\031\070" +
    "\032\067\033\107\034\127\035\074\036\113\037\104\040" +
    "\053\041\132\042\124\043\125\044\076\045\072\046\057" +
    "\047\112\050\111\051\110\052\135\053\134\054\062\055" +
    "\133\056\123\057\126\060\117\061\122\062\073\063\101" +
    "\064\064\065\145\066\055\067\114\070\146\071\141\072" +
    "\137\073\105\074\144\075\142\076\061\077\115\100\077" +
    "\101\121\102\131\103\054\104\071\105\063\106\120\107" +
    "\140\110\060\111\116\114\154\115\160\116\152\117\157" +
    "\120\156\001\002\000\006\005\uffa2\014\uffa2\001\002\000" +
    "\004\060\u011e\001\002\000\004\013\042\001\002\000\006" +
    "\044\211\062\177\001\002\000\004\014\u0126\001\002\000" +
    "\004\005\164\001\002\000\004\014\u0123\001\002\000\004" +
    "\062\177\001\002\000\004\005\uffaf\001\002\000\006\002" +
    "\uffb0\010\uffb0\001\002\000\004\044\211\001\002\000\004" +
    "\005\uffae\001\002\000\004\031\u0129\001\002\000\004\013" +
    "\042\001\002\000\012\034\u012d\035\u0131\036\u0134\037\u0130" +
    "\001\002\000\006\005\uffe6\014\uffe6\001\002\000\006\005" +
    "\164\014\u013d\001\002\000\004\013\u013b\001\002\000\006" +
    "\005\uffe7\014\uffe7\001\002\000\006\005\uffe8\014\uffe8\001" +
    "\002\000\004\013\u0139\001\002\000\004\013\u0137\001\002" +
    "\000\006\005\uffe9\014\uffe9\001\002\000\006\005\uffea\014" +
    "\uffea\001\002\000\004\013\u0135\001\002\000\166\025\075" +
    "\026\066\027\103\030\143\031\070\032\067\033\107\034" +
    "\127\035\074\036\113\037\104\040\053\041\132\042\124" +
    "\043\125\044\076\045\072\046\057\047\112\050\111\051" +
    "\110\052\135\053\134\054\062\055\133\056\123\057\126" +
    "\060\117\061\122\062\073\063\101\064\064\065\145\066" +
    "\055\067\114\070\146\071\141\072\137\073\105\074\144" +
    "\075\142\076\061\077\115\100\077\101\121\102\131\103" +
    "\054\104\071\105\063\106\120\107\140\110\060\111\116" +
    "\114\065\115\136\116\056\117\106\120\102\001\002\000" +
    "\006\005\uffa8\014\uffa8\001\002\000\166\025\075\026\066" +
    "\027\103\030\143\031\070\032\067\033\107\034\127\035" +
    "\074\036\113\037\104\040\053\041\132\042\124\043\125" +
    "\044\076\045\072\046\057\047\112\050\111\051\110\052" +
    "\135\053\134\054\062\055\133\056\123\057\126\060\117" +
    "\061\122\062\073\063\101\064\064\065\145\066\055\067" +
    "\114\070\146\071\141\072\137\073\105\074\144\075\142" +
    "\076\061\077\115\100\077\101\121\102\131\103\054\104" +
    "\071\105\063\106\120\107\140\110\060\111\116\114\154" +
    "\115\160\116\152\117\157\120\156\001\002\000\006\005" +
    "\uffa9\014\uffa9\001\002\000\004\116\325\001\002\000\006" +
    "\005\uffa7\014\uffa7\001\002\000\166\025\075\026\066\027" +
    "\103\030\143\031\070\032\067\033\107\034\127\035\074" +
    "\036\113\037\104\040\053\041\132\042\124\043\125\044" +
    "\076\045\072\046\057\047\112\050\111\051\110\052\135" +
    "\053\134\054\062\055\133\056\123\057\126\060\117\061" +
    "\122\062\073\063\101\064\064\065\145\066\055\067\114" +
    "\070\146\071\141\072\137\073\105\074\144\075\142\076" +
    "\061\077\115\100\077\101\121\102\131\103\054\104\071" +
    "\105\063\106\120\107\140\110\060\111\116\114\154\115" +
    "\160\116\152\117\157\120\156\001\002\000\006\005\uffaa" +
    "\014\uffaa\001\002\000\012\034\u012d\035\u0131\036\u0134\037" +
    "\u0130\001\002\000\006\002\uffec\010\uffec\001\002\000\006" +
    "\005\uffeb\014\uffeb\001\002\000\004\031\u0141\001\002\000" +
    "\004\013\042\001\002\000\004\032\047\001\002\000\004" +
    "\005\uffe4\001\002\000\004\005\164\001\002\000\006\002" +
    "\uffe5\010\uffe5\001\002\000\006\015\u0147\016\u0148\001\002" +
    "\000\004\011\u014a\001\002\000\004\013\u0149\001\002\000" +
    "\026\025\uff38\026\uff38\027\uff38\030\uff38\040\uff38\041\uff38" +
    "\042\uff38\055\uff38\056\uff38\057\uff38\001\002\000\004\010" +
    "\u014b\001\002\000\004\012\u0153\001\002\000\004\010\ufffd" +
    "\001\002\000\004\010\u014e\001\002\000\004\012\u0150\001" +
    "\002\000\004\010\ufffe\001\002\000\006\016\u0148\020\u0151" +
    "\001\002\000\004\011\u0152\001\002\000\004\002\000\001" +
    "\002\000\004\016\u0148\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0151\000\034\002\020\004\017\005\004\010\007\013" +
    "\016\015\011\017\005\022\015\024\014\027\013\032\012" +
    "\034\010\066\006\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\067\u013f\001\001\000\004\067\u0127\001\001" +
    "\000\004\067\u011c\001\001\000\004\067\u010b\001\001\000" +
    "\004\067\u0105\001\001\000\004\067\355\001\001\000\004" +
    "\067\331\001\001\000\004\067\312\001\001\000\004\067" +
    "\172\001\001\000\004\067\034\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\070\040\001" +
    "\001\000\010\016\044\037\047\040\045\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\071" +
    "\162\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\077\127\105\077\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\040\147\001\001" +
    "\000\002\001\001\000\006\100\152\105\154\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\161\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\070\174\001" +
    "\001\000\036\030\175\031\221\046\212\053\202\054\206" +
    "\055\207\056\222\057\177\060\215\061\217\062\205\063" +
    "\213\064\203\065\224\001\001\000\004\071\310\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\075\231" +
    "\105\233\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\077\242\101\240\105" +
    "\077\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\104\245\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\104\250\001\001" +
    "\000\002\001\001\000\004\073\253\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\104\260\001\001\000\002\001" +
    "\001\000\004\072\263\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\102\275\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\074\301" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\077\242\101\304\105\077\001\001\000\002" +
    "\001\001\000\004\102\306\001\001\000\002\001\001\000" +
    "\034\031\311\046\212\053\202\054\206\055\207\056\222" +
    "\057\177\060\215\061\217\062\205\063\213\064\203\065" +
    "\224\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\070\314\001\001\000\014\006\315\007" +
    "\320\037\317\040\316\041\322\001\001\000\004\071\326" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\103\325" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\007\330\037\317\040\316\041\322\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\070\333\001" +
    "\001\000\036\035\345\036\347\046\342\053\335\054\340" +
    "\055\341\056\350\057\334\060\344\061\346\062\337\063" +
    "\343\064\336\065\351\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\071\353\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\034\036\354\046\342\053\335\054\340\055\341\056" +
    "\350\057\334\060\344\061\346\062\337\063\343\064\336" +
    "\065\351\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\070\357\001\001\000\016\025\364" +
    "\026\365\046\362\047\361\050\367\051\370\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\071\374\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\077\242\101\372\105\077\001\001\000\002\001\001\000" +
    "\014\026\375\046\362\047\361\050\367\051\370\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\076\u0102\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\077\242\101\u0104\105\077\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\070\u0107" +
    "\001\001\000\006\023\u0108\046\u0109\001\001\000\004\071" +
    "\u010a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\070\u010d\001\001\000\022\020\u0113\021" +
    "\u0114\041\u0110\046\u0112\047\u0111\050\u0115\051\u0116\052\u010e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\071\u0118" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\021\u0119\041\u0110\046\u0112\047\u0111\050\u0115" +
    "\051\u0116\052\u010e\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\100\u011b\105\154\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\070\u011e\001\001\000\010\033" +
    "\u0120\046\u0121\053\u011f\001\001\000\002\001\001\000\004" +
    "\071\u0124\001\001\000\002\001\001\000\004\053\u0123\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\u0126" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\070" +
    "\u0129\001\001\000\016\011\u012b\012\u0132\042\u0131\043\u012e" +
    "\044\u012d\045\u012a\001\001\000\002\001\001\000\004\071" +
    "\u013d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\077\u0135" +
    "\105\077\001\001\000\002\001\001\000\006\100\u0137\105" +
    "\154\001\001\000\002\001\001\000\004\103\u0139\001\001" +
    "\000\002\001\001\000\006\100\u013b\105\154\001\001\000" +
    "\002\001\001\000\014\012\u013e\042\u0131\043\u012e\044\u012d" +
    "\045\u012a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\070\u0141\001\001\000\006\014\u0143" +
    "\037\u0142\001\001\000\002\001\001\000\004\071\u0144\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\003\u014c\004" +
    "\u014b\005\004\010\007\013\016\015\011\017\005\022\015" +
    "\024\014\027\013\032\012\034\010\066\006\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\004\u014e\005\004" +
    "\010\007\013\016\015\011\017\005\022\015\024\014\027" +
    "\013\032\012\034\010\066\006\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //Listado de errores	
	private FuncionesSolicitudes funcionesSolicitudes = new FuncionesSolicitudes();
	//Controlador de error sintactico
	@Override
	public void syntax_error(Symbol a){
		System.out.println("error de sintaxis");
		String msgError = "Se esperaba: ";
		//Token tokenError = (Token) a.value;//lo transformamos en token para obtener su lexema, fila y columna
		
		 /*for(int i = 0; i < expected_token_ids().size(); i++){
			msgError = msgError + mensajes[expected_token_ids().get(i)];
			if(i < expected_token_ids().size() - 1)
				msgError = msgError + ", ";			
		}*/
		//recibe tipo error, lexema error, mensaje, linea, columna
		//TokenError tokenErrorAux = new TokenError("SINTACTICO", tokenError.getLexema(), msgError, tokenError.getLinea(), tokenError.getColumna());
		//listadoErroresSintacticos.add(tokenErrorAux);

	}

	public ArrayList<TokenError> getListadoErroresParser(){
		return funcionesSolicitudes.getListadoErroresParser();
	}

    public parser(LexerIndigo lex){
        super(lex);
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= s EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // s ::= MENOR EXCLAMACION INICIO_SOLICITUDES MAYOR bloque_solicitudes MENOR EXCLAMACION FIN_SOLICITUDES MAYOR 
            {
              Object RESULT =null;
		 funcionesSolicitudes.imprimirListadoErrores();	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // s ::= solicitud 
            {
              Object RESULT =null;
		 funcionesSolicitudes.imprimirListadoErrores();	
              CUP$parser$result = parser.getSymbolFactory().newSymbol("s",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bloque_solicitudes ::= bloque_solicitudes solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bloque_solicitudes ::= solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // solicitud ::= solicitud_crear_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para crear usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // solicitud ::= solicitud_modificar_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // solicitud ::= solicitud_eliminar_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // solicitud ::= solicitud_login_usuario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para lgin de usuarios\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // solicitud ::= solicitud_nuevo_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud de nuevo formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // solicitud ::= solicitud_eliminar_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar un formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // solicitud ::= solicitud_modificar_formulario 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar formulario\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // solicitud ::= solicitud_agregar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para agregar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // solicitud ::= solicitud_modificar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para modificar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // solicitud ::= solicitud_eliminar_componente 
            {
              Object RESULT =null;
		 System.out.println("se detecto una solicitud para eliminar un componente\n "); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // solicitud_crear_usuario ::= apertura_solicitud_i CREAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_crear_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "CREAR_USUARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_crear_usuario",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // bloque_parametros_crear_usuario ::= bloque_parametros_crear_usuario COMA parametros_crear_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_crear_usuario",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // bloque_parametros_crear_usuario ::= parametros_crear_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"CREAR_USUARIO"+"\"",  "\""+"CREDENCIALES_USUARIO"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_crear_usuario",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // parametros_crear_usuario ::= parametro_usuario 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parametros_crear_usuario ::= parametro_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros_crear_usuario ::= parametro_fecha_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear_usuario",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // solicitud_modificar_usuario ::= apertura_solicitud_i MODIFICAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_modificar_usuario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_USUARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_usuario",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // bloque_parametros_modificar_usuario ::= bloque_parametros_modificar_usuario COMA parametros_modificar_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // bloque_parametros_modificar_usuario ::= parametros_modificar_usuario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"MODIFICAR_USUARIO"+"\"",  "\""+"CREDENCIALES_USUARIO"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametros_modificar_usuario ::= parametro_usuario_antiguo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametros_modificar_usuario ::= parametro_usuario_nuevo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametros_modificar_usuario ::= parametro_nuevo_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // parametros_modificar_usuario ::= parametro_fecha_modificacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // solicitud_eliminar_usuario ::= apertura_solicitud_i ELIMINAR_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_eliminar_usuario finalizacion_solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_usuario",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // bloque_parametros_eliminar_usuario ::= parametro_usuario 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_usuario",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // solicitud_login_usuario ::= apertura_solicitud_i LOGIN_USUARIO apertura_solicitud_ii CREDENCIALES_USUARIO apertura_bloque_parametros bloque_parametros_login_usuario finalizacion_solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_login_usuario",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // bloque_parametros_login_usuario ::= parametro_usuario COMA parametro_password 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_login_usuario",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // bloque_parametros_login_usuario ::= parametro_password COMA parametro_usuario 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_login_usuario",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // solicitud_nuevo_formulario ::= apertura_solicitud_i NUEVO_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_nuevo_formulario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "NUEVO_FORMULARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_nuevo_formulario",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // bloque_parametros_nuevo_formulario ::= bloque_parametros_nuevo_formulario COMA parametros_nuevo_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_nuevo_formulario",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // bloque_parametros_nuevo_formulario ::= parametros_nuevo_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"NUEVO_FORMULARIO"+"\"",  "\""+"PARAMETROS_FORMULARIO"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_nuevo_formulario",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_nuevo_formulario ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametros_nuevo_formulario ::= parametro_titulo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametros_nuevo_formulario ::= parametro_nombre 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametros_nuevo_formulario ::= parametro_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametros_nuevo_formulario ::= parametro_usuario_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametros_nuevo_formulario ::= parametro_fecha_creacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_nuevo_formulario",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // solicitud_eliminar_formulario ::= apertura_solicitud_i ELIMINAR_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_eliminar_formulario finalizacion_solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_formulario",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // bloque_parametros_eliminar_formulario ::= parametro_id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_formulario",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // solicitud_modificar_formulario ::= apertura_solicitud_i MODIFICAR_FORMULARIO apertura_solicitud_ii PARAMETROS_FORMULARIO apertura_bloque_parametros bloque_parametros_modificar_formulario finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_FORMULARIO");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_formulario",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // bloque_parametros_modificar_formulario ::= bloque_parametros_modificar_formulario COMA parametros_modificar_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_formulario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // bloque_parametros_modificar_formulario ::= parametros_modificar_formulario 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"MODIFICAR_FORMULARIO"+"\"",  "\""+"PARAMETROS_FORMULARIO"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_formulario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // parametros_modificar_formulario ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // parametros_modificar_formulario ::= parametro_titulo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // parametros_modificar_formulario ::= parametro_nombre 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametros_modificar_formulario ::= parametro_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_formulario",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // solicitud_agregar_componente ::= apertura_solicitud_i AGREGAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_agregar_componente finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "AGREGAR_COMPONENTE");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_agregar_componente",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // bloque_parametros_agregar_componente ::= bloque_parametros_agregar_componente COMA parametros_agregar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_agregar_componente",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // bloque_parametros_agregar_componente ::= parametros_agregar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"AGREGAR_COMPONENTE"+"\"",  "\""+"PARAMETROS_COMPONENTE"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_agregar_componente",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // parametros_agregar_componente ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametros_agregar_componente ::= parametro_nombre_campo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parametros_agregar_componente ::= parametro_formulario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parametros_agregar_componente ::= parametro_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parametros_agregar_componente ::= parametro_indice 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parametros_agregar_componente ::= parametro_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // parametros_agregar_componente ::= parametro_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // parametros_agregar_componente ::= parametro_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parametros_agregar_componente ::= parametro_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parametros_agregar_componente ::= parametro_filas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // parametros_agregar_componente ::= parametro_columnas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // parametros_agregar_componente ::= parametro_URL 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_agregar_componente",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // solicitud_modificar_componente ::= apertura_solicitud_i MODIFICAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_modificar_componente finalizacion_solicitud 
            {
              Object RESULT =null;
		int inicioleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int inicioright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token inicio = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int paramleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		BloqueParametros param = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token fin = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
								
			funcionesSolicitudes.analizarSolicitud(inicio, fin, param, "MODIFICAR_COMPONENTE");
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_modificar_componente",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // bloque_parametros_modificar_componente ::= bloque_parametros_modificar_componente COMA parametros_modificar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		BloqueParametros a = (BloqueParametros)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro b = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			//Verificamos parámetros repetidos
			funcionesSolicitudes.analizarEntradasMultiples(a, b);	
			a.insertarParametro(b);
			a.insertarTipoParametros(b.getTipoParametro());
			RESULT = a; 
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_componente",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // bloque_parametros_modificar_componente ::= parametros_modificar_componente 
            {
              BloqueParametros RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 
			BloqueParametros bloqueAuxiliar = new BloqueParametros("\""+"MODIFICAR_COMPONENTE"+"\"",  "\""+"PARAMETROS_COMPONENTE"+"\"");
			bloqueAuxiliar.insertarParametro(a);
			bloqueAuxiliar.insertarTipoParametros(a.getTipoParametro());
			RESULT = bloqueAuxiliar; 		
		
              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_modificar_componente",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parametros_modificar_componente ::= parametro_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parametros_modificar_componente ::= parametro_nombre_campo 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parametros_modificar_componente ::= parametro_formulario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parametros_modificar_componente ::= parametro_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parametros_modificar_componente ::= parametro_indice 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parametros_modificar_componente ::= parametro_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // parametros_modificar_componente ::= parametro_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // parametros_modificar_componente ::= parametro_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // parametros_modificar_componente ::= parametro_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // parametros_modificar_componente ::= parametro_filas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // parametros_modificar_componente ::= parametro_columnas 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // parametros_modificar_componente ::= parametro_URL 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		TokenParametro a = (TokenParametro)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificar_componente",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // solicitud_eliminar_componente ::= apertura_solicitud_i ELIMINAR_COMPONENTE apertura_solicitud_ii PARAMETROS_COMPONENTE apertura_bloque_parametros bloque_parametros_eliminar_componente finalizacion_solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud_eliminar_componente",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // bloque_parametros_eliminar_componente ::= parametro_id COMA parametro_formulario_id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_componente",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // bloque_parametros_eliminar_componente ::= parametro_formulario_id COMA parametro_id 
            {
              String RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_parametros_eliminar_componente",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // parametro_usuario ::= USUARIO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // parametro_password ::= PASSWORD DOS_PUNTOS valores_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_password",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // parametro_fecha_creacion ::= FECHA_CREACION DOS_PUNTOS valores_fecha 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha_creacion",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // parametro_usuario_antiguo ::= USUARIO_ANTIGUO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_antiguo",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // parametro_usuario_nuevo ::= USUARIO_NUEVO DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_nuevo",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // parametro_nuevo_password ::= NUEVO_PASSWORD DOS_PUNTOS valores_password 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nuevo_password",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // parametro_fecha_modificacion ::= FECHA_MODIFICACION DOS_PUNTOS valores_fecha 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha_modificacion",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // parametro_id ::= ID DOS_PUNTOS valores_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_id",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // parametro_titulo ::= TITULO DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_titulo",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // parametro_nombre ::= NOMBRE DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nombre",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // parametro_tema ::= TEMA DOS_PUNTOS valores_tema 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_tema",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // parametro_usuario_creacion ::= USUARIO_CREACION DOS_PUNTOS valores_usuario_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_creacion",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // parametro_formulario_id ::= FORMULARIO DOS_PUNTOS valores_id 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_formulario_id",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // parametro_nombre_campo ::= NOMBRE_CAMPO DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nombre_campo",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // parametro_clase ::= CLASE DOS_PUNTOS valores_clase 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_clase",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // parametro_indice ::= INDICE DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_indice",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // parametro_texto_visible ::= TEXTO_VISIBLE DOS_PUNTOS valores_texto_visible 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_texto_visible",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // parametro_alineacion ::= ALINEACION DOS_PUNTOS valores_alineacion 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_alineacion",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // parametro_requerido ::= REQUERIDO DOS_PUNTOS valores_requerido 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_requerido",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // parametro_opciones ::= OPCIONES DOS_PUNTOS valores_opciones 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_opciones",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // parametro_filas ::= FILAS DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_filas",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // parametro_columnas ::= COLUMNAS DOS_PUNTOS valores_digito 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token b = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new TokenParametro("\""+a.getTipoToken()+"\"", b.getLexema() ,a.getLinea(), a.getColumna()); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_columnas",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // parametro_URL ::= URL DOS_PUNTOS 
            {
              TokenParametro RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_URL",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // valores_id ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_id",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // valores_fecha ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_fecha",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // valores_digito ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_digito",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // valores_tema ::= DARK 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // valores_tema ::= BLUE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // valores_tema ::= WHITE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_tema",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // valores_clase ::= CAMPO_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // valores_clase ::= AREA_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // valores_clase ::= CHECKBOX 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // valores_clase ::= RADIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // valores_clase ::= FICHERO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // valores_clase ::= IMAGEN 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // valores_clase ::= COMBO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // valores_clase ::= BOTON 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_clase",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // valores_alineacion ::= CENTRO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // valores_alineacion ::= DERECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // valores_alineacion ::= IZQUIERDA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // valores_alineacion ::= JUSTIFICAR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_alineacion",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // valores_requerido ::= SI 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_requerido",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // valores_requerido ::= NO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_requerido",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // valores_usuario_id ::= VALOR_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // valores_usuario_id ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // valores_usuario_id ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // valores_usuario_id ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // valores_usuario_id ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // valores_usuario_id ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_usuario_id",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // valores_password ::= VALOR_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // valores_password ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // valores_password ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // valores_password ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // valores_password ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // valores_password ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_password",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // valores_opciones ::= VALOR_ITEMS_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // valores_opciones ::= VALOR_ITEMS_SIN_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // valores_opciones ::= DIGITO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // valores_opciones ::= VALOR_FECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // valores_opciones ::= VALOR_ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // valores_opciones ::= valores_reservados 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_opciones",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // valores_texto_visible ::= VALOR_TEXTO_VISIBLE_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // valores_texto_visible ::= VALOR_ITEMS_CON_ESPACIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // valores_texto_visible ::= valores_password 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_texto_visible",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // valores_reservados ::= CREAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // valores_reservados ::= MODIFICAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // valores_reservados ::= ELIMINAR_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // valores_reservados ::= LOGIN_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // valores_reservados ::= CREDENCIALES_USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // valores_reservados ::= USUARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // valores_reservados ::= PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // valores_reservados ::= USUARIO_ANTIGUO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // valores_reservados ::= USUARIO_NUEVO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // valores_reservados ::= NUEVO_PASSWORD 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // valores_reservados ::= FECHA_MODIFICACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // valores_reservados ::= NUEVO_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // valores_reservados ::= ELIMINAR_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // valores_reservados ::= MODIFICAR_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // valores_reservados ::= PARAMETROS_FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // valores_reservados ::= ID 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // valores_reservados ::= TITULO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // valores_reservados ::= NOMBRE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // valores_reservados ::= TEMA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // valores_reservados ::= USUARIO_CREACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // valores_reservados ::= FECHA_CREACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // valores_reservados ::= DARK 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // valores_reservados ::= BLUE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // valores_reservados ::= WHITE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // valores_reservados ::= AGREGAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // valores_reservados ::= MODIFICAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // valores_reservados ::= ELIMINAR_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // valores_reservados ::= PARAMETROS_COMPONENTE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // valores_reservados ::= NOMBRE_CAMPO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // valores_reservados ::= FORMULARIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // valores_reservados ::= CLASE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // valores_reservados ::= INDICE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // valores_reservados ::= TEXTO_VISIBLE 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // valores_reservados ::= ALINEACION 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // valores_reservados ::= REQUERIDO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // valores_reservados ::= OPCIONES 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // valores_reservados ::= FILAS 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // valores_reservados ::= COLUMNAS 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // valores_reservados ::= URL 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // valores_reservados ::= CAMPO_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // valores_reservados ::= AREA_TEXTO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // valores_reservados ::= CHECKBOX 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // valores_reservados ::= RADIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // valores_reservados ::= FICHERO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // valores_reservados ::= IMAGEN 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // valores_reservados ::= COMBO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // valores_reservados ::= BOTON 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // valores_reservados ::= CENTRO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // valores_reservados ::= IZQUIERDA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // valores_reservados ::= DERECHA 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // valores_reservados ::= JUSTIFICAR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // valores_reservados ::= SI 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // valores_reservados ::= NO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("valores_reservados",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // apertura_solicitud_i ::= MENOR EXCLAMACION INICIO_SOLICITUD DOS_PUNTOS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_i",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // apertura_solicitud_ii ::= MAYOR LLAVES_INICIO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_solicitud_ii",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // apertura_bloque_parametros ::= DOS_PUNTOS CORCHETES_INICIO LLAVES_INICIO 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.peek()).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("apertura_bloque_parametros",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // finalizacion_solicitud ::= LLAVES_FIN CORCHETES_FIN LLAVES_FIN MENOR FIN_SOLICITUD EXCLAMACION MAYOR 
            {
              Token RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Token a = (Token)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		 RESULT = a; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("finalizacion_solicitud",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}